{
  "openapi": "3.0.0",
  "info": {
    "version": "2015-10-07",
    "x-release": "v4",
    "title": "Amazon EventBridge",
    "description": "Amazon EventBridge helps you to respond to state changes in your AWS resources. When your resources change state, they automatically send events into an event stream. You can create rules that match selected events in the stream and route them to targets to take action. You can also use rules to take action on a predetermined schedule. For example, you can configure rules to:   Automatically invoke an AWS Lambda function to update DNS entries when an event notifies you that Amazon EC2 instance enters the running state.   Direct specific API records from AWS CloudTrail to an Amazon Kinesis data stream for detailed analysis of potential security or availability risks.   Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.   For more information about the features of Amazon EventBridge, see the Amazon EventBridge User Guide.",
    "x-categories": ["monitoring"],
    "x-logo": {
      "url": "https://raw.githubusercontent.com/chainjet/assets/master/integrations/aws/Arch_Amazon-EventBridge_64.svg"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "x-providerName": "amazonaws.com",
    "x-serviceName": "eventbridge",
    "x-origin": [
      {
        "contentType": "application/json",
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/eventbridge-2015-10-07.normal.json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "x-apisguru-driver": "external"
      }
    ],
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-preferred": true
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/events/"
  },
  "servers": [
    {
      "url": "http://events.{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "eu-south-1",
            "af-south-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-east-1",
            "ap-south-1",
            "sa-east-1",
            "me-south-1"
          ],
          "default": "us-east-1"
        }
      },
      "description": "The Amazon EventBridge multi-region endpoint"
    },
    {
      "url": "https://events.{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "eu-south-1",
            "af-south-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-east-1",
            "ap-south-1",
            "sa-east-1",
            "me-south-1"
          ],
          "default": "us-east-1"
        }
      },
      "description": "The Amazon EventBridge multi-region endpoint"
    },
    {
      "url": "http://events.{region}.amazonaws.com.cn",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": ["cn-north-1", "cn-northwest-1"],
          "default": "cn-north-1"
        }
      },
      "description": "The Amazon EventBridge endpoint for China (Beijing) and China (Ningxia)"
    },
    {
      "url": "https://events.{region}.amazonaws.com.cn",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": ["cn-north-1", "cn-northwest-1"],
          "default": "cn-north-1"
        }
      },
      "description": "The Amazon EventBridge endpoint for China (Beijing) and China (Ningxia)"
    }
  ],
  "x-hasEquivalentPaths": true,
  "paths": {
    "/#X-Amz-Target=AWSEvents.ActivateEventSource": {
      "post": {
        "operationId": "ActivateEventSource",
        "description": "Activates a partner event source that has been deactivated. Once activated, your matching event bus will start receiving events from the event source.",
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InvalidStateException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "484": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "ActivateEventSourceRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The name of the partner event source to activate."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.ActivateEventSource"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Activate Event Source"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.CreateEventBus": {
      "post": {
        "operationId": "CreateEventBus",
        "description": "Creates a new event bus within your account. This can be a custom event bus which you can use to receive events from your custom applications and services, or it can be a partner event bus which can be matched to a partner event source.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "EventBusArn": {
                      "allOf": [
                        { "type": "string" },
                        { "description": "The ARN of the new event bus." }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceAlreadyExistsException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InvalidStateException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "484": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "485": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": {} } }
          },
          "486": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "CreateEventBusRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "<p>The name of the new event bus. </p> <p>Event bus names cannot contain the / character. You can't use the name <code>default</code> for a custom event bus, as this name is already used for your account's default event bus.</p> <p>If this is a partner event bus, the name must exactly match the name of the partner event source that this event bus is matched to.</p>"
                      }
                    ]
                  },
                  "EventSourceName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "If you are creating a partner event bus, this specifies the partner event source that the new event bus will be matched with."
                      }
                    ]
                  },
                  "Tags": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": ["Key", "Value"],
                          "properties": {
                            "Key": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 128
                                },
                                {
                                  "description": "A string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources."
                                }
                              ]
                            },
                            "Value": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "minLength": 0,
                                  "maxLength": 256
                                },
                                {
                                  "description": "The value for the specified tag key."
                                }
                              ]
                            }
                          },
                          "description": "A key-value pair associated with an AWS resource. In EventBridge, rules and event buses support tagging."
                        }
                      },
                      { "description": "Tags to associate with the event bus." }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.CreateEventBus"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Create Event Bus"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.CreatePartnerEventSource": {
      "post": {
        "operationId": "CreatePartnerEventSource",
        "description": "<p>Called by an SaaS partner to create a partner event source. This operation is not used by AWS customers.</p> <p>Each partner event source can be used by one AWS account to create a matching partner event bus in that AWS account. A SaaS partner must create one partner event source for each AWS account that wants to receive those event types. </p> <p>A partner event source creates events based on resources within the SaaS partner's service or application.</p> <p>An AWS account that creates a partner event bus that matches the partner event source can use that event bus to receive events from the partner, and then process them using AWS Events rules and targets.</p> <p>Partner event source names follow this format:</p> <p> <code> <i>partner_name</i>/<i>event_namespace</i>/<i>event_name</i> </code> </p> <p> <i>partner_name</i> is determined during partner registration and identifies the partner to AWS customers. <i>event_namespace</i> is determined by the partner and is a way for the partner to categorize their events. <i>event_name</i> is determined by the partner, and should uniquely identify an event-generating resource within the partner system. The combination of <i>event_namespace</i> and <i>event_name</i> should help AWS customers decide whether to create an event bus to receive these events.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "EventSourceArn": {
                      "allOf": [
                        { "type": "string" },
                        {
                          "description": "The ARN of the partner event source."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceAlreadyExistsException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": {} } }
          },
          "484": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name", "Account"],
                "title": "CreatePartnerEventSourceRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The name of the partner event source. This name must be unique and must be in the format <code> <i>partner_name</i>/<i>event_namespace</i>/<i>event_name</i> </code>. The AWS account that wants to use this partner event source must create a partner event bus with a name that matches the name of the partner event source."
                      }
                    ]
                  },
                  "Account": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "\\d{12}",
                        "minLength": 12,
                        "maxLength": 12
                      },
                      {
                        "description": "The AWS account ID that is permitted to create a matching partner event bus for this partner event source."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.CreatePartnerEventSource"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Create Partner Event Source"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DeactivateEventSource": {
      "post": {
        "operationId": "DeactivateEventSource",
        "description": "<p>You can use this operation to temporarily stop receiving events from the specified partner event source. The matching event bus is not deleted. </p> <p>When you deactivate a partner event source, the source goes into PENDING state. If it remains in PENDING state for more than two weeks, it is deleted.</p> <p>To activate a deactivated partner event source, use <a>ActivateEventSource</a>.</p>",
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InvalidStateException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "484": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "DeactivateEventSourceRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The name of the partner event source to deactivate."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.DeactivateEventSource"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Deactivate Event Source"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DeleteEventBus": {
      "post": {
        "operationId": "DeleteEventBus",
        "description": "Deletes the specified custom event bus or partner event bus. All rules associated with this event bus need to be deleted. You can't delete your account's default event bus.",
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "DeleteEventBusRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      { "description": "The name of the event bus to delete." }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.DeleteEventBus"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Delete Event Bus"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DeletePartnerEventSource": {
      "post": {
        "operationId": "DeletePartnerEventSource",
        "description": "<p>This operation is used by SaaS partners to delete a partner event source. This operation is not used by AWS customers.</p> <p>When you delete an event source, the status of the corresponding partner event bus in the AWS customer account becomes DELETED.</p> <p/>",
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name", "Account"],
                "title": "DeletePartnerEventSourceRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The name of the event source to delete."
                      }
                    ]
                  },
                  "Account": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "\\d{12}",
                        "minLength": 12,
                        "maxLength": 12
                      },
                      {
                        "description": "The AWS account ID of the AWS customer that the event source was created for."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.DeletePartnerEventSource"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Delete Partner Event Source"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DeleteRule": {
      "post": {
        "operationId": "DeleteRule",
        "description": "<p>Deletes the specified rule.</p> <p>Before you can delete the rule, you must remove all targets, using <a>RemoveTargets</a>.</p> <p>When you delete a rule, incoming events might continue to match to the deleted rule. Allow a short period of time for changes to take effect.</p> <p>Managed rules are rules created and managed by another AWS service on your behalf. These rules are created by those other AWS services to support functionality in those services. You can delete these rules using the <code>Force</code> option, but you should do so only if you are sure the other service is not still using that rule.</p>",
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ManagedRuleException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "DeleteRuleRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The name of the rule." }
                    ]
                  },
                  "EventBusName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The event bus associated with the rule. If you omit this, the default event bus is used."
                      }
                    ]
                  },
                  "Force": {
                    "allOf": [
                      { "type": "boolean" },
                      {
                        "description": "If this is a managed rule, created by an AWS service on your behalf, you must specify <code>Force</code> as <code>True</code> to delete the rule. This parameter is ignored for rules that are not managed rules. You can check whether a rule is a managed rule by using <code>DescribeRule</code> or <code>ListRules</code> and checking the <code>ManagedBy</code> field of the response."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.DeleteRule"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Delete Rule"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DescribeEventBus": {
      "post": {
        "operationId": "DescribeEventBus",
        "description": "<p>Displays details about an event bus in your account. This can include the external AWS accounts that are permitted to write events to your default event bus, and the associated policy. For custom event buses and partner event buses, it displays the name, ARN, policy, state, and creation time.</p> <p> To enable your account to receive events from other accounts on its default event bus, use <a>PutPermission</a>.</p> <p>For more information about partner event buses, see <a>CreateEventBus</a>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "allOf": [
                        { "type": "string" },
                        {
                          "description": "The name of the event bus. Currently, this is always <code>default</code>."
                        }
                      ]
                    },
                    "Arn": {
                      "allOf": [
                        { "type": "string" },
                        {
                          "description": "The Amazon Resource Name (ARN) of the account permitted to write events to the current account."
                        }
                      ]
                    },
                    "Policy": {
                      "allOf": [
                        { "type": "string" },
                        {
                          "description": "The policy that enables the external account to send events to your account."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "DescribeEventBusRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The name of the event bus to show details for. If you omit this, the default event bus is displayed."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.DescribeEventBus"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Describe Event Bus"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DescribeEventSource": {
      "post": {
        "operationId": "DescribeEventSource",
        "description": "This operation lists details about a partner event source that is shared with your account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Arn": {
                      "allOf": [
                        { "type": "string" },
                        {
                          "description": "The ARN of the partner event source."
                        }
                      ]
                    },
                    "CreatedBy": {
                      "allOf": [
                        { "type": "string" },
                        {
                          "description": "The name of the SaaS partner that created the event source."
                        }
                      ]
                    },
                    "CreationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "The date and time that the event source was created."
                        }
                      ]
                    },
                    "ExpirationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "The date and time that the event source will expire if you do not create a matching event bus."
                        }
                      ]
                    },
                    "Name": {
                      "allOf": [
                        { "type": "string" },
                        {
                          "description": "The name of the partner event source."
                        }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": ["PENDING", "ACTIVE", "DELETED"]
                        },
                        {
                          "description": "The state of the event source. If it is ACTIVE, you have already created a matching event bus for this event source, and that event bus is active. If it is PENDING, either you haven't yet created a matching event bus, or that event bus is deactivated. If it is DELETED, you have created a matching event bus, but the event source has since been deleted."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "DescribeEventSourceRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The name of the partner event source to display the details of."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.DescribeEventSource"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Describe Event Source"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DescribePartnerEventSource": {
      "post": {
        "operationId": "DescribePartnerEventSource",
        "description": "An SaaS partner can use this operation to list details about a partner event source that they have created. AWS customers do not use this operation. Instead, AWS customers can use <a>DescribeEventSource</a> to see details about a partner event source that is shared with them.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Arn": {
                      "allOf": [
                        { "type": "string" },
                        { "description": "The ARN of the event source." }
                      ]
                    },
                    "Name": {
                      "allOf": [
                        { "type": "string" },
                        { "description": "The name of the event source." }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "DescribePartnerEventSourceRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The name of the event source to display."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.DescribePartnerEventSource"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Describe Partner Event Source"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DescribeRule": {
      "post": {
        "operationId": "DescribeRule",
        "description": "<p>Describes the specified rule.</p> <p>DescribeRule does not list the targets of a rule. To see the targets associated with a rule, use <a>ListTargetsByRule</a>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "[\\.\\-_A-Za-z0-9]+",
                          "minLength": 1,
                          "maxLength": 64
                        },
                        { "description": "The name of the rule." }
                      ]
                    },
                    "Arn": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 1600 },
                        {
                          "description": "The Amazon Resource Name (ARN) of the rule."
                        }
                      ]
                    },
                    "EventPattern": {
                      "allOf": [
                        { "type": "string" },
                        {
                          "description": "The event pattern. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html\">Events and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>."
                        }
                      ]
                    },
                    "ScheduleExpression": {
                      "allOf": [
                        { "type": "string", "maxLength": 256 },
                        {
                          "description": "The scheduling expression. For example, \"cron(0 20 * * ? *)\", \"rate(5 minutes)\"."
                        }
                      ]
                    },
                    "State": {
                      "allOf": [
                        { "type": "string", "enum": ["ENABLED", "DISABLED"] },
                        {
                          "description": "Specifies whether the rule is enabled or disabled."
                        }
                      ]
                    },
                    "Description": {
                      "allOf": [
                        { "type": "string", "maxLength": 512 },
                        { "description": "The description of the rule." }
                      ]
                    },
                    "RoleArn": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 1600 },
                        {
                          "description": "The Amazon Resource Name (ARN) of the IAM role associated with the rule."
                        }
                      ]
                    },
                    "ManagedBy": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 128 },
                        {
                          "description": "If this is a managed rule, created by an AWS service on your behalf, this field displays the principal name of the AWS service that created the rule."
                        }
                      ]
                    },
                    "EventBusName": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "[/\\.\\-_A-Za-z0-9]+",
                          "minLength": 1,
                          "maxLength": 256
                        },
                        {
                          "description": "The event bus associated with the rule."
                        }
                      ]
                    },
                    "CreatedBy": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 128 },
                        {
                          "description": "The account ID of the user that created the rule. If you use <code>PutRule</code> to put a rule on an event bus in another account, the other account is the owner of the rule, and the rule ARN includes the account ID for that account. However, the value for <code>CreatedBy</code> is the account ID as the account that created the rule in the other account."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "DescribeRuleRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The name of the rule." }
                    ]
                  },
                  "EventBusName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The event bus associated with the rule. If you omit this, the default event bus is used."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.DescribeRule"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Describe Rule"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DisableRule": {
      "post": {
        "operationId": "DisableRule",
        "description": "<p>Disables the specified rule. A disabled rule won't match any events, and won't self-trigger if it has a schedule expression.</p> <p>When you disable a rule, incoming events might continue to match to the disabled rule. Allow a short period of time for changes to take effect.</p>",
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "ManagedRuleException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "DisableRuleRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The name of the rule." }
                    ]
                  },
                  "EventBusName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The event bus associated with the rule. If you omit this, the default event bus is used."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.DisableRule"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Disable Rule"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.EnableRule": {
      "post": {
        "operationId": "EnableRule",
        "description": "<p>Enables the specified rule. If the rule does not exist, the operation fails.</p> <p>When you enable a rule, incoming events might not immediately start matching to a newly enabled rule. Allow a short period of time for changes to take effect.</p>",
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "ManagedRuleException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "EnableRuleRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The name of the rule." }
                    ]
                  },
                  "EventBusName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The event bus associated with the rule. If you omit this, the default event bus is used."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.EnableRule"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Enable Rule"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.ListEventBuses": {
      "post": {
        "operationId": "ListEventBuses",
        "description": "Lists all the event buses in your account, including the default event bus, custom event buses, and partner event buses.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "EventBuses": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Name": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The name of the event bus."
                                  }
                                ]
                              },
                              "Arn": {
                                "allOf": [
                                  { "type": "string" },
                                  { "description": "The ARN of the event bus." }
                                ]
                              },
                              "Policy": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The permissions policy of the event bus, describing which other AWS accounts can write events to this event bus."
                                  }
                                ]
                              }
                            },
                            "description": "An event bus receives events from a source and routes them to rules associated with that event bus. Your account's default event bus receives rules from AWS services. A custom event bus can receive rules from AWS services as well as your custom applications and services. A partner event bus receives events from an event source created by an SaaS partner. These events come from the partners services or applications."
                          }
                        },
                        { "description": "This list of event buses." }
                      ]
                    },
                    "NextToken": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 2048 },
                        {
                          "description": "A token you can use in a subsequent operation to retrieve the next set of results."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "ListEventBusesRequest",
                "properties": {
                  "NamePrefix": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "Specifying this limits the results to only those event buses with names that start with the specified prefix."
                      }
                    ]
                  },
                  "NextToken": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 2048 },
                      {
                        "description": "The token returned by a previous call to retrieve the next set of results."
                      }
                    ]
                  },
                  "Limit": {
                    "allOf": [
                      { "type": "integer", "minimum": 1, "maximum": 100 },
                      {
                        "description": "Specifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.ListEventBuses"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "List Event Buses"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.ListEventSources": {
      "post": {
        "operationId": "ListEventSources",
        "description": "You can use this to see all the partner event sources that have been shared with your AWS account. For more information about partner event sources, see <a>CreateEventBus</a>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "EventSources": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Arn": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The ARN of the event source."
                                  }
                                ]
                              },
                              "CreatedBy": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The name of the partner that created the event source."
                                  }
                                ]
                              },
                              "CreationTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "The date and time the event source was created."
                                  }
                                ]
                              },
                              "ExpirationTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "The date and time that the event source will expire, if the AWS account doesn't create a matching event bus for it."
                                  }
                                ]
                              },
                              "Name": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The name of the event source."
                                  }
                                ]
                              },
                              "State": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": ["PENDING", "ACTIVE", "DELETED"]
                                  },
                                  {
                                    "description": "The state of the event source. If it is ACTIVE, you have already created a matching event bus for this event source, and that event bus is active. If it is PENDING, either you haven't yet created a matching event bus, or that event bus is deactivated. If it is DELETED, you have created a matching event bus, but the event source has since been deleted."
                                  }
                                ]
                              }
                            },
                            "description": "A partner event source is created by an SaaS partner. If a customer creates a partner event bus that matches this event source, that AWS account can receive events from the partner's applications or services."
                          }
                        },
                        { "description": "The list of event sources." }
                      ]
                    },
                    "NextToken": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 2048 },
                        {
                          "description": "A token you can use in a subsequent operation to retrieve the next set of results."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "ListEventSourcesRequest",
                "properties": {
                  "NamePrefix": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "Specifying this limits the results to only those partner event sources with names that start with the specified prefix."
                      }
                    ]
                  },
                  "NextToken": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 2048 },
                      {
                        "description": "The token returned by a previous call to retrieve the next set of results."
                      }
                    ]
                  },
                  "Limit": {
                    "allOf": [
                      { "type": "integer", "minimum": 1, "maximum": 100 },
                      {
                        "description": "Specifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.ListEventSources"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "List Event Sources"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.ListPartnerEventSourceAccounts": {
      "post": {
        "operationId": "ListPartnerEventSourceAccounts",
        "description": "An SaaS partner can use this operation to display the AWS account ID that a particular partner event source name is associated with. This operation is not used by AWS customers.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "PartnerEventSourceAccounts": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Account": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "\\d{12}",
                                    "minLength": 12,
                                    "maxLength": 12
                                  },
                                  {
                                    "description": "The AWS account ID that the partner event source was offered to."
                                  }
                                ]
                              },
                              "CreationTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "The date and time the event source was created."
                                  }
                                ]
                              },
                              "ExpirationTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "The date and time that the event source will expire, if the AWS account doesn't create a matching event bus for it."
                                  }
                                ]
                              },
                              "State": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": ["PENDING", "ACTIVE", "DELETED"]
                                  },
                                  {
                                    "description": "The state of the event source. If it is ACTIVE, you have already created a matching event bus for this event source, and that event bus is active. If it is PENDING, either you haven't yet created a matching event bus, or that event bus is deactivated. If it is DELETED, you have created a matching event bus, but the event source has since been deleted."
                                  }
                                ]
                              }
                            },
                            "description": "The AWS account that a partner event source has been offered to."
                          }
                        },
                        {
                          "description": "The list of partner event sources returned by the operation."
                        }
                      ]
                    },
                    "NextToken": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 2048 },
                        {
                          "description": "A token you can use in a subsequent operation to retrieve the next set of results."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["EventSourceName"],
                "title": "ListPartnerEventSourceAccountsRequest",
                "properties": {
                  "EventSourceName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The name of the partner event source to display account information about."
                      }
                    ]
                  },
                  "NextToken": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 2048 },
                      {
                        "description": "The token returned by a previous call to this operation. Specifying this retrieves the next set of results."
                      }
                    ]
                  },
                  "Limit": {
                    "allOf": [
                      { "type": "integer", "minimum": 1, "maximum": 100 },
                      {
                        "description": "Specifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.ListPartnerEventSourceAccounts"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "List Partner Event Source Accounts"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.ListPartnerEventSources": {
      "post": {
        "operationId": "ListPartnerEventSources",
        "description": "An SaaS partner can use this operation to list all the partner event source names that they have created. This operation is not used by AWS customers.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "PartnerEventSources": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Arn": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The ARN of the partner event source."
                                  }
                                ]
                              },
                              "Name": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The name of the partner event source."
                                  }
                                ]
                              }
                            },
                            "description": "A partner event source is created by an SaaS partner. If a customer creates a partner event bus that matches this event source, that AWS account can receive events from the partner's applications or services."
                          }
                        },
                        {
                          "description": "The list of partner event sources returned by the operation."
                        }
                      ]
                    },
                    "NextToken": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 2048 },
                        {
                          "description": "A token you can use in a subsequent operation to retrieve the next set of results."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["NamePrefix"],
                "title": "ListPartnerEventSourcesRequest",
                "properties": {
                  "NamePrefix": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "aws\\.partner/[\\.\\-_A-Za-z0-9]+/[/\\.\\-_A-Za-z0-9]*",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "If you specify this, the results are limited to only those partner event sources that start with the string you specify."
                      }
                    ]
                  },
                  "NextToken": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 2048 },
                      {
                        "description": "The token returned by a previous call to this operation. Specifying this retrieves the next set of results."
                      }
                    ]
                  },
                  "Limit": {
                    "allOf": [
                      { "type": "integer", "minimum": 1, "maximum": 100 },
                      {
                        "description": "pecifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.ListPartnerEventSources"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "List Partner Event Sources"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.ListRuleNamesByTarget": {
      "post": {
        "operationId": "ListRuleNamesByTarget",
        "description": "Lists the rules for the specified target. You can see which of the rules in Amazon EventBridge can invoke a specific target in your account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "RuleNames": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "[\\.\\-_A-Za-z0-9]+",
                            "minLength": 1,
                            "maxLength": 64
                          }
                        },
                        {
                          "description": "The names of the rules that can invoke the given target."
                        }
                      ]
                    },
                    "NextToken": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 2048 },
                        {
                          "description": "Indicates whether there are additional results to retrieve. If there are no more results, the value is null."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["TargetArn"],
                "title": "ListRuleNamesByTargetRequest",
                "properties": {
                  "TargetArn": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 1600 },
                      {
                        "description": "The Amazon Resource Name (ARN) of the target resource."
                      }
                    ]
                  },
                  "EventBusName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "Limits the results to show only the rules associated with the specified event bus."
                      }
                    ]
                  },
                  "NextToken": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 2048 },
                      {
                        "description": "The token returned by a previous call to retrieve the next set of results."
                      }
                    ]
                  },
                  "Limit": {
                    "allOf": [
                      { "type": "integer", "minimum": 1, "maximum": 100 },
                      {
                        "description": "The maximum number of results to return."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.ListRuleNamesByTarget"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "List Rule Names By Target"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.ListRules": {
      "post": {
        "operationId": "ListRules",
        "description": "<p>Lists your Amazon EventBridge rules. You can either list all the rules or you can provide a prefix to match to the rule names.</p> <p>ListRules does not list the targets of a rule. To see the targets associated with a rule, use <a>ListTargetsByRule</a>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Rules": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Name": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "[\\.\\-_A-Za-z0-9]+",
                                    "minLength": 1,
                                    "maxLength": 64
                                  },
                                  { "description": "The name of the rule." }
                                ]
                              },
                              "Arn": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1600
                                  },
                                  {
                                    "description": "The Amazon Resource Name (ARN) of the rule."
                                  }
                                ]
                              },
                              "EventPattern": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The event pattern of the rule. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html\">Events and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>."
                                  }
                                ]
                              },
                              "State": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": ["ENABLED", "DISABLED"]
                                  },
                                  { "description": "The state of the rule." }
                                ]
                              },
                              "Description": {
                                "allOf": [
                                  { "type": "string", "maxLength": 512 },
                                  {
                                    "description": "The description of the rule."
                                  }
                                ]
                              },
                              "ScheduleExpression": {
                                "allOf": [
                                  { "type": "string", "maxLength": 256 },
                                  {
                                    "description": "The scheduling expression. For example, \"cron(0 20 * * ? *)\", \"rate(5 minutes)\"."
                                  }
                                ]
                              },
                              "RoleArn": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1600
                                  },
                                  {
                                    "description": "The Amazon Resource Name (ARN) of the role that is used for target invocation."
                                  }
                                ]
                              },
                              "ManagedBy": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 128
                                  },
                                  {
                                    "description": "If the rule was created on behalf of your account by an AWS service, this field displays the principal name of the service that created the rule."
                                  }
                                ]
                              },
                              "EventBusName": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "[/\\.\\-_A-Za-z0-9]+",
                                    "minLength": 1,
                                    "maxLength": 256
                                  },
                                  {
                                    "description": "The event bus associated with the rule."
                                  }
                                ]
                              }
                            },
                            "description": "Contains information about a rule in Amazon EventBridge."
                          }
                        },
                        {
                          "description": "The rules that match the specified criteria."
                        }
                      ]
                    },
                    "NextToken": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 2048 },
                        {
                          "description": "Indicates whether there are additional results to retrieve. If there are no more results, the value is null."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "ListRulesRequest",
                "properties": {
                  "NamePrefix": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The prefix matching the rule name." }
                    ]
                  },
                  "EventBusName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "Limits the results to show only the rules associated with the specified event bus."
                      }
                    ]
                  },
                  "NextToken": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 2048 },
                      {
                        "description": "The token returned by a previous call to retrieve the next set of results."
                      }
                    ]
                  },
                  "Limit": {
                    "allOf": [
                      { "type": "integer", "minimum": 1, "maximum": 100 },
                      {
                        "description": "The maximum number of results to return."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.ListRules"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "List Rules"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.ListTagsForResource": {
      "post": {
        "operationId": "ListTagsForResource",
        "description": "Displays the tags associated with an EventBridge resource. In EventBridge, rules and event buses can be tagged.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Tags": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": ["Key", "Value"],
                            "properties": {
                              "Key": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 128
                                  },
                                  {
                                    "description": "A string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources."
                                  }
                                ]
                              },
                              "Value": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "minLength": 0,
                                    "maxLength": 256
                                  },
                                  {
                                    "description": "The value for the specified tag key."
                                  }
                                ]
                              }
                            },
                            "description": "A key-value pair associated with an AWS resource. In EventBridge, rules and event buses support tagging."
                          }
                        },
                        {
                          "description": "The list of tag keys and values associated with the resource you specified"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ResourceARN"],
                "title": "ListTagsForResourceRequest",
                "properties": {
                  "ResourceARN": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 1600 },
                      {
                        "description": "The ARN of the EventBridge resource for which you want to view tags."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.ListTagsForResource"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "List Tags For Resource"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.ListTargetsByRule": {
      "post": {
        "operationId": "ListTargetsByRule",
        "description": "Lists the targets assigned to the specified rule.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Targets": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": ["Id", "Arn"],
                            "properties": {
                              "Id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "[\\.\\-_A-Za-z0-9]+",
                                    "minLength": 1,
                                    "maxLength": 64
                                  },
                                  { "description": "The ID of the target." }
                                ]
                              },
                              "Arn": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1600
                                  },
                                  {
                                    "description": "The Amazon Resource Name (ARN) of the target."
                                  }
                                ]
                              },
                              "RoleArn": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1600
                                  },
                                  {
                                    "description": "The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. If one rule triggers multiple targets, you can use a different IAM role for each target."
                                  }
                                ]
                              },
                              "Input": {
                                "allOf": [
                                  { "type": "string", "maxLength": 8192 },
                                  {
                                    "description": "Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. For more information, see <a href=\"http://www.rfc-editor.org/rfc/rfc7159.txt\">The JavaScript Object Notation (JSON) Data Interchange Format</a>."
                                  }
                                ]
                              },
                              "InputPath": {
                                "allOf": [
                                  { "type": "string", "maxLength": 256 },
                                  {
                                    "description": "The value of the JSONPath that is used for extracting part of the matched event when passing it to the target. You must use JSON dot notation, not bracket notation. For more information about JSON paths, see <a href=\"http://goessner.net/articles/JsonPath/\">JSONPath</a>."
                                  }
                                ]
                              },
                              "InputTransformer": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": ["InputTemplate"],
                                    "properties": {
                                      "InputPathsMap": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "maxProperties": 10,
                                            "additionalProperties": {
                                              "type": "string",
                                              "maxLength": 256
                                            }
                                          },
                                          {
                                            "description": "<p>Map of JSON paths to be extracted from the event. You can then insert these in the template in <code>InputTemplate</code> to produce the output you want to be sent to the target.</p> <p> <code>InputPathsMap</code> is an array key-value pairs, where each value is a valid JSON path. You can have as many as 10 key-value pairs. You must use JSON dot notation, not bracket notation.</p> <p>The keys cannot start with \"AWS.\" </p>"
                                          }
                                        ]
                                      },
                                      "InputTemplate": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          {
                                            "description": "<p>Input template where you specify placeholders that will be filled with the values of the keys from <code>InputPathsMap</code> to customize the data sent to the target. Enclose each <code>InputPathsMaps</code> value in brackets: &lt;<i>value</i>&gt; The InputTemplate must be valid JSON.</p> <p>If <code>InputTemplate</code> is a JSON object (surrounded by curly braces), the following restrictions apply:</p> <ul> <li> <p>The placeholder cannot be used as an object key.</p> </li> <li> <p>Object values cannot include quote marks.</p> </li> </ul> <p>The following example shows the syntax for using <code>InputPathsMap</code> and <code>InputTemplate</code>.</p> <p> <code> \"InputTransformer\":</code> </p> <p> <code>{</code> </p> <p> <code>\"InputPathsMap\": {\"instance\": \"$.detail.instance\",\"status\": \"$.detail.status\"},</code> </p> <p> <code>\"InputTemplate\": \"&lt;instance&gt; is in state &lt;status&gt;\"</code> </p> <p> <code>}</code> </p> <p>To have the <code>InputTemplate</code> include quote marks within a JSON string, escape each quote marks with a slash, as in the following example:</p> <p> <code> \"InputTransformer\":</code> </p> <p> <code>{</code> </p> <p> <code>\"InputPathsMap\": {\"instance\": \"$.detail.instance\",\"status\": \"$.detail.status\"},</code> </p> <p> <code>\"InputTemplate\": \"&lt;instance&gt; is in state \\\"&lt;status&gt;\\\"\"</code> </p> <p> <code>}</code> </p>"
                                          }
                                        ]
                                      }
                                    },
                                    "description": "Contains the parameters needed for you to provide custom input to a target based on one or more pieces of data extracted from the event."
                                  },
                                  {
                                    "description": "Settings to enable you to provide custom input to a target based on certain event data. You can extract one or more key-value pairs from the event and then use that data to send customized input to the target."
                                  }
                                ]
                              },
                              "KinesisParameters": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": ["PartitionKeyPath"],
                                    "properties": {
                                      "PartitionKeyPath": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "maxLength": 256
                                          },
                                          {
                                            "description": "The JSON path to be extracted from the event and used as the partition key. For more information, see <a href=\"https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#partition-key\">Amazon Kinesis Streams Key Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>."
                                          }
                                        ]
                                      }
                                    },
                                    "description": "This object enables you to specify a JSON path to extract from the event and use as the partition key for the Amazon Kinesis data stream, so that you can control the shard to which the event goes. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key."
                                  },
                                  {
                                    "description": "The custom parameter you can use to control the shard assignment, when the target is a Kinesis data stream. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key."
                                  }
                                ]
                              },
                              "RunCommandParameters": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": ["RunCommandTargets"],
                                    "properties": {
                                      "RunCommandTargets": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": ["Key", "Values"],
                                              "properties": {
                                                "Key": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$",
                                                      "minLength": 1,
                                                      "maxLength": 128
                                                    },
                                                    {
                                                      "description": "Can be either <code>tag:</code> <i>tag-key</i> or <code>InstanceIds</code>."
                                                    }
                                                  ]
                                                },
                                                "Values": {
                                                  "allOf": [
                                                    {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "maxLength": 256
                                                      },
                                                      "minItems": 1,
                                                      "maxItems": 50
                                                    },
                                                    {
                                                      "description": "If <code>Key</code> is <code>tag:</code> <i>tag-key</i>, <code>Values</code> is a list of tag values. If <code>Key</code> is <code>InstanceIds</code>, <code>Values</code> is a list of Amazon EC2 instance IDs."
                                                    }
                                                  ]
                                                }
                                              },
                                              "description": "Information about the EC2 instances that are to be sent the command, specified as key-value pairs. Each <code>RunCommandTarget</code> block can include only one key, but this key may specify multiple values."
                                            },
                                            "minItems": 1,
                                            "maxItems": 5
                                          },
                                          {
                                            "description": "Currently, we support including only one RunCommandTarget block, which specifies either an array of InstanceIds or a tag."
                                          }
                                        ]
                                      }
                                    },
                                    "description": "This parameter contains the criteria (either InstanceIds or a tag) used to specify which EC2 instances are to be sent the command. "
                                  },
                                  {
                                    "description": "Parameters used when you are using the rule to invoke Amazon EC2 Run Command."
                                  }
                                ]
                              },
                              "EcsParameters": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": ["TaskDefinitionArn"],
                                    "properties": {
                                      "TaskDefinitionArn": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 1600
                                          },
                                          {
                                            "description": "The ARN of the task definition to use if the event target is an Amazon ECS task. "
                                          }
                                        ]
                                      },
                                      "TaskCount": {
                                        "allOf": [
                                          { "type": "integer", "minimum": 1 },
                                          {
                                            "description": "The number of tasks to create based on <code>TaskDefinition</code>. The default is 1."
                                          }
                                        ]
                                      },
                                      "LaunchType": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "enum": [
                                              "EC2",
                                              "FARGATE",
                                              "EXTERNAL"
                                            ]
                                          },
                                          {
                                            "description": "Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The <code>FARGATE</code> value is supported only in the Regions where AWS Fargate with Amazon ECS is supported. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS-Fargate.html\">AWS Fargate on Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>."
                                          }
                                        ]
                                      },
                                      "NetworkConfiguration": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "awsvpcConfiguration": {
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "required": ["Subnets"],
                                                    "properties": {
                                                      "Subnets": {
                                                        "allOf": [
                                                          {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          {
                                                            "description": "Specifies the subnets associated with the task. These subnets must all be in the same VPC. You can specify as many as 16 subnets."
                                                          }
                                                        ]
                                                      },
                                                      "SecurityGroups": {
                                                        "allOf": [
                                                          {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          {
                                                            "description": "Specifies the security groups associated with the task. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used."
                                                          }
                                                        ]
                                                      },
                                                      "AssignPublicIp": {
                                                        "allOf": [
                                                          {
                                                            "type": "string",
                                                            "enum": [
                                                              "ENABLED",
                                                              "DISABLED"
                                                            ]
                                                          },
                                                          {
                                                            "description": "Specifies whether the task's elastic network interface receives a public IP address. You can specify <code>ENABLED</code> only when <code>LaunchType</code> in <code>EcsParameters</code> is set to <code>FARGATE</code>."
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "description": "This structure specifies the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the <code>awsvpc</code> network mode."
                                                  },
                                                  {
                                                    "description": "Use this structure to specify the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the <code>awsvpc</code> network mode."
                                                  }
                                                ]
                                              }
                                            },
                                            "description": "This structure specifies the network configuration for an ECS task."
                                          },
                                          {
                                            "description": "<p>Use this structure if the ECS task uses the <code>awsvpc</code> network mode. This structure specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. This structure is required if <code>LaunchType</code> is <code>FARGATE</code> because the <code>awsvpc</code> mode is required for Fargate tasks.</p> <p>If you specify <code>NetworkConfiguration</code> when the target ECS task does not use the <code>awsvpc</code> network mode, the task fails.</p>"
                                          }
                                        ]
                                      },
                                      "PlatformVersion": {
                                        "allOf": [
                                          { "type": "string" },
                                          {
                                            "description": "<p>Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as <code>1.1.0</code>.</p> <p>This structure is used only if <code>LaunchType</code> is <code>FARGATE</code>. For more information about valid platform versions, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\">AWS Fargate Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>"
                                          }
                                        ]
                                      },
                                      "Group": {
                                        "allOf": [
                                          { "type": "string" },
                                          {
                                            "description": "Specifies an ECS task group for the task. The maximum length is 255 characters."
                                          }
                                        ]
                                      },
                                      "CapacityProviderStrategy": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": ["capacityProvider"],
                                              "properties": {
                                                "capacityProvider": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "minLength": 1,
                                                      "maxLength": 255
                                                    },
                                                    {
                                                      "description": "The short name of the capacity provider."
                                                    }
                                                  ]
                                                },
                                                "weight": {
                                                  "allOf": [
                                                    {
                                                      "type": "integer",
                                                      "minimum": 0,
                                                      "maximum": 1000
                                                    },
                                                    {
                                                      "description": "The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied."
                                                    }
                                                  ]
                                                },
                                                "base": {
                                                  "allOf": [
                                                    {
                                                      "type": "integer",
                                                      "minimum": 0,
                                                      "maximum": 100000
                                                    },
                                                    {
                                                      "description": "The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. If no value is specified, the default value of 0 is used. "
                                                    }
                                                  ]
                                                }
                                              },
                                              "description": "The details of a capacity provider strategy. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CapacityProviderStrategyItem.html\">CapacityProviderStrategyItem</a> in the Amazon ECS API Reference."
                                            },
                                            "maxItems": 6
                                          },
                                          {
                                            "description": "<p>The capacity provider strategy to use for the task.</p> <p>If a <code>capacityProviderStrategy</code> is specified, the <code>launchType</code> parameter must be omitted. If no <code>capacityProviderStrategy</code> or launchType is specified, the <code>defaultCapacityProviderStrategy</code> for the cluster is used. </p>"
                                          }
                                        ]
                                      },
                                      "EnableECSManagedTags": {
                                        "allOf": [
                                          { "type": "boolean" },
                                          {
                                            "description": "Specifies whether to enable Amazon ECS managed tags for the task. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html\">Tagging Your Amazon ECS Resources</a> in the Amazon Elastic Container Service Developer Guide. "
                                          }
                                        ]
                                      },
                                      "EnableExecuteCommand": {
                                        "allOf": [
                                          { "type": "boolean" },
                                          {
                                            "description": "Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task."
                                          }
                                        ]
                                      },
                                      "PlacementConstraints": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "distinctInstance",
                                                        "memberOf"
                                                      ]
                                                    },
                                                    {
                                                      "description": "The type of constraint. Use distinctInstance to ensure that each task in a particular group is running on a different container instance. Use memberOf to restrict the selection to a group of valid candidates. "
                                                    }
                                                  ]
                                                },
                                                "expression": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "maxLength": 2000
                                                    },
                                                    {
                                                      "description": "A cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is <code>distinctInstance</code>. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html\">Cluster Query Language</a> in the Amazon Elastic Container Service Developer Guide. "
                                                    }
                                                  ]
                                                }
                                              },
                                              "description": "An object representing a constraint on task placement. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html\">Task Placement Constraints</a> in the Amazon Elastic Container Service Developer Guide."
                                            },
                                            "maxItems": 10
                                          },
                                          {
                                            "description": "An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime)."
                                          }
                                        ]
                                      },
                                      "PlacementStrategy": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "random",
                                                        "spread",
                                                        "binpack"
                                                      ]
                                                    },
                                                    {
                                                      "description": "The type of placement strategy. The random placement strategy randomly places tasks on available candidates. The spread placement strategy spreads placement across available candidates evenly based on the field parameter. The binpack strategy places tasks on available candidates that have the least available amount of the resource that is specified with the field parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory (but still enough to run the task). "
                                                    }
                                                  ]
                                                },
                                                "field": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "maxLength": 255
                                                    },
                                                    {
                                                      "description": "The field to apply the placement strategy against. For the spread placement strategy, valid values are instanceId (or host, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone. For the binpack placement strategy, valid values are cpu and memory. For the random placement strategy, this field is not used. "
                                                    }
                                                  ]
                                                }
                                              },
                                              "description": "The task placement strategy for a task or service. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html\">Task Placement Strategies</a> in the Amazon Elastic Container Service Service Developer Guide."
                                            },
                                            "maxItems": 5
                                          },
                                          {
                                            "description": "The placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task. "
                                          }
                                        ]
                                      },
                                      "PropagateTags": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "enum": ["TASK_DEFINITION"]
                                          },
                                          {
                                            "description": "Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the TagResource API action. "
                                          }
                                        ]
                                      },
                                      "ReferenceId": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "maxLength": 1024
                                          },
                                          {
                                            "description": "The reference ID to use for the task."
                                          }
                                        ]
                                      },
                                      "Tags": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": ["Key", "Value"],
                                              "properties": {
                                                "Key": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "minLength": 1,
                                                      "maxLength": 128
                                                    },
                                                    {
                                                      "description": "A string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources."
                                                    }
                                                  ]
                                                },
                                                "Value": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "minLength": 0,
                                                      "maxLength": 256
                                                    },
                                                    {
                                                      "description": "The value for the specified tag key."
                                                    }
                                                  ]
                                                }
                                              },
                                              "description": "A key-value pair associated with an AWS resource. In EventBridge, rules and event buses support tagging."
                                            }
                                          },
                                          {
                                            "description": "The metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html#ECS-RunTask-request-tags\">RunTask</a> in the Amazon ECS API Reference."
                                          }
                                        ]
                                      }
                                    },
                                    "description": "The custom parameters to be used when the target is an Amazon ECS task."
                                  },
                                  {
                                    "description": "Contains the Amazon ECS task definition and task count to be used, if the event target is an Amazon ECS task. For more information about Amazon ECS tasks, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\">Task Definitions </a> in the <i>Amazon EC2 Container Service Developer Guide</i>."
                                  }
                                ]
                              },
                              "BatchParameters": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": ["JobDefinition", "JobName"],
                                    "properties": {
                                      "JobDefinition": {
                                        "allOf": [
                                          { "type": "string" },
                                          {
                                            "description": "The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist."
                                          }
                                        ]
                                      },
                                      "JobName": {
                                        "allOf": [
                                          { "type": "string" },
                                          {
                                            "description": "The name to use for this execution of the job, if the target is an AWS Batch job."
                                          }
                                        ]
                                      },
                                      "ArrayProperties": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "Size": {
                                                "allOf": [
                                                  { "type": "integer" },
                                                  {
                                                    "description": "The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000."
                                                  }
                                                ]
                                              }
                                            },
                                            "description": "The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an AWS Batch job."
                                          },
                                          {
                                            "description": "The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an AWS Batch job."
                                          }
                                        ]
                                      },
                                      "RetryStrategy": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "Attempts": {
                                                "allOf": [
                                                  { "type": "integer" },
                                                  {
                                                    "description": "The number of times to attempt to retry, if the job fails. Valid values are 1–10."
                                                  }
                                                ]
                                              }
                                            },
                                            "description": "The retry strategy to use for failed jobs, if the target is an AWS Batch job. If you specify a retry strategy here, it overrides the retry strategy defined in the job definition."
                                          },
                                          {
                                            "description": "The retry strategy to use for failed jobs, if the target is an AWS Batch job. The retry strategy is the number of times to retry the failed job execution. Valid values are 1–10. When you specify a retry strategy here, it overrides the retry strategy defined in the job definition."
                                          }
                                        ]
                                      }
                                    },
                                    "description": "The custom parameters to be used when the target is an AWS Batch job."
                                  },
                                  {
                                    "description": "If the event target is an AWS Batch job, this contains the job definition, job name, and other parameters. For more information, see <a href=\"https://docs.aws.amazon.com/batch/latest/userguide/jobs.html\">Jobs</a> in the <i>AWS Batch User Guide</i>."
                                  }
                                ]
                              },
                              "SqsParameters": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "MessageGroupId": {
                                        "allOf": [
                                          { "type": "string" },
                                          {
                                            "description": "The FIFO message group ID to use as the target."
                                          }
                                        ]
                                      }
                                    },
                                    "description": "This structure includes the custom parameter to be used when the target is an SQS FIFO queue."
                                  },
                                  {
                                    "description": "<p>Contains the message group ID to use when the target is a FIFO queue.</p> <p>If you specify an SQS FIFO queue as a target, the queue must have content-based deduplication enabled.</p>"
                                  }
                                ]
                              },
                              "HttpParameters": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "PathParameterValues": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "pattern": "^(?!\\s*$).+"
                                            }
                                          },
                                          {
                                            "description": "The path parameter values to be used to populate API Gateway REST API path wildcards (\"*\")."
                                          }
                                        ]
                                      },
                                      "HeaderParameters": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string",
                                              "pattern": "^[ \\t]*[\\x20-\\x7E]+([ \\t]+[\\x20-\\x7E]+)*[ \\t]*$",
                                              "maxLength": 512
                                            }
                                          },
                                          {
                                            "description": "The headers that need to be sent as part of request invoking the API Gateway REST API."
                                          }
                                        ]
                                      },
                                      "QueryStringParameters": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string",
                                              "pattern": "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F]+",
                                              "maxLength": 512
                                            }
                                          },
                                          {
                                            "description": "The query string keys/values that need to be sent as part of request invoking the API Gateway REST API."
                                          }
                                        ]
                                      }
                                    },
                                    "description": "These are custom parameter to be used when the target is an API Gateway REST APIs."
                                  },
                                  {
                                    "description": "<p>Contains the HTTP parameters to use when the target is a API Gateway REST endpoint.</p> <p>If you specify an API Gateway REST API as a target, you can use this parameter to specify headers, path parameter, query string keys/values as part of your target invoking request.</p>"
                                  }
                                ]
                              },
                              "RedshiftDataParameters": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": ["Database", "Sql"],
                                    "properties": {
                                      "SecretManagerArn": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "pattern": "(^arn:aws([a-z]|\\-)*:secretsmanager:[a-z0-9-.]+:.*)|(\\$(\\.[\\w_-]+(\\[(\\d+|\\*)\\])*)*)",
                                            "minLength": 1,
                                            "maxLength": 1600
                                          },
                                          {
                                            "description": "The name or ARN of the secret that enables access to the database. Required when authenticating using AWS Secrets Manager."
                                          }
                                        ]
                                      },
                                      "Database": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "pattern": "([a-zA-Z0-9]+)|(\\$(\\.[\\w_-]+(\\[(\\d+|\\*)\\])*)*)",
                                            "minLength": 1,
                                            "maxLength": 64
                                          },
                                          {
                                            "description": "The name of the database. Required when authenticating using temporary credentials."
                                          }
                                        ]
                                      },
                                      "DbUser": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "pattern": "([a-zA-Z0-9]+)|(\\$(\\.[\\w_-]+(\\[(\\d+|\\*)\\])*)*)",
                                            "minLength": 1,
                                            "maxLength": 128
                                          },
                                          {
                                            "description": "The database user name. Required when authenticating using temporary credentials."
                                          }
                                        ]
                                      },
                                      "Sql": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 100000
                                          },
                                          {
                                            "description": "The SQL statement text to run."
                                          }
                                        ]
                                      },
                                      "StatementName": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 500
                                          },
                                          {
                                            "description": "The name of the SQL statement. You can name the SQL statement when you create it to identify the query."
                                          }
                                        ]
                                      },
                                      "WithEvent": {
                                        "allOf": [
                                          { "type": "boolean" },
                                          {
                                            "description": "Indicates whether to send an event back to EventBridge after the SQL statement runs."
                                          }
                                        ]
                                      }
                                    },
                                    "description": "These are custom parameters to be used when the target is a Redshift cluster to invoke the Redshift Data API ExecuteStatement based on EventBridge events."
                                  },
                                  {
                                    "description": "<p>Contains the Redshift Data API parameters to use when the target is a Redshift cluster.</p> <p>If you specify a Redshift Cluster as a Target, you can use this to specify parameters to invoke the Redshift Data API ExecuteStatement based on EventBridge events.</p>"
                                  }
                                ]
                              },
                              "DeadLetterConfig": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "Arn": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 1600
                                          },
                                          {
                                            "description": "The ARN of the SQS queue specified as the target for the dead-letter queue."
                                          }
                                        ]
                                      }
                                    },
                                    "description": "A <code>DeadLetterConfig</code> object that contains information about a dead-letter queue configuration."
                                  },
                                  {
                                    "description": "The <code>DeadLetterConfig</code> that defines the target queue to send dead-letter queue events to."
                                  }
                                ]
                              },
                              "RetryPolicy": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "MaximumRetryAttempts": {
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 185
                                          },
                                          {
                                            "description": "The maximum number of retry attempts to make before the request fails. Retry attempts continue until either the maximum number of attempts is made or until the duration of the <code>MaximumEventAgeInSeconds</code> is met."
                                          }
                                        ]
                                      },
                                      "MaximumEventAgeInSeconds": {
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "minimum": 60,
                                            "maximum": 86400
                                          },
                                          {
                                            "description": "The maximum amount of time, in seconds, to continue to make retry attempts."
                                          }
                                        ]
                                      }
                                    },
                                    "description": "A <code>RetryPolicy</code> object that includes information about the retry policy settings."
                                  },
                                  {
                                    "description": "The <code>RetryPolicy</code> object that contains the retry policy configuration to use for the dead-letter queue."
                                  }
                                ]
                              },
                              "SageMakerPipelineParameters": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "PipelineParameterList": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": ["Name", "Value"],
                                              "properties": {
                                                "Name": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
                                                      "minLength": 1,
                                                      "maxLength": 256
                                                    },
                                                    {
                                                      "description": "Name of parameter to start execution of a SageMaker Model Building Pipeline."
                                                    }
                                                  ]
                                                },
                                                "Value": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "maxLength": 1024
                                                    },
                                                    {
                                                      "description": "Value of parameter to start execution of a SageMaker Model Building Pipeline."
                                                    }
                                                  ]
                                                }
                                              },
                                              "description": "Name/Value pair of a parameter to start execution of a SageMaker Model Building Pipeline."
                                            },
                                            "minItems": 0,
                                            "maxItems": 200
                                          },
                                          {
                                            "description": "List of Parameter names and values for SageMaker Model Building Pipeline execution."
                                          }
                                        ]
                                      }
                                    },
                                    "description": "These are custom parameters to use when the target is a SageMaker Model Building Pipeline that starts based on EventBridge events."
                                  },
                                  {
                                    "description": "<p>Contains the SageMaker Model Building Pipeline parameters to start execution of a SageMaker Model Building Pipeline.</p> <p>If you specify a SageMaker Model Building Pipeline as a target, you can use this to specify parameters to start a pipeline execution based on EventBridge events.</p>"
                                  }
                                ]
                              }
                            },
                            "description": "<p>Targets are the resources to be invoked when a rule is triggered. For a complete list of services and resources that can be set as a target, see <a>PutTargets</a>.</p> <p>If you are setting the event bus of another account as the target, and that account granted permission to your account through an organization instead of directly by the account ID, then you must specify a <code>RoleArn</code> with proper permissions in the <code>Target</code> structure. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html\">Sending and Receiving Events Between AWS Accounts</a> in the <i>Amazon EventBridge User Guide</i>.</p>"
                          },
                          "minItems": 1,
                          "maxItems": 100
                        },
                        { "description": "The targets assigned to the rule." }
                      ]
                    },
                    "NextToken": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 2048 },
                        {
                          "description": "Indicates whether there are additional results to retrieve. If there are no more results, the value is null."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Rule"],
                "title": "ListTargetsByRuleRequest",
                "properties": {
                  "Rule": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The name of the rule." }
                    ]
                  },
                  "EventBusName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The event bus associated with the rule. If you omit this, the default event bus is used."
                      }
                    ]
                  },
                  "NextToken": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 2048 },
                      {
                        "description": "The token returned by a previous call to retrieve the next set of results."
                      }
                    ]
                  },
                  "Limit": {
                    "allOf": [
                      { "type": "integer", "minimum": 1, "maximum": 100 },
                      {
                        "description": "The maximum number of results to return."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.ListTargetsByRule"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "List Targets By Rule"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.PutEvents": {
      "post": {
        "operationId": "PutEvents",
        "description": "Sends custom events to Amazon EventBridge so that they can be matched to rules.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "FailedEntryCount": {
                      "allOf": [
                        { "type": "integer" },
                        { "description": "The number of failed entries." }
                      ]
                    },
                    "Entries": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "EventId": {
                                "allOf": [
                                  { "type": "string" },
                                  { "description": "The ID of the event." }
                                ]
                              },
                              "ErrorCode": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The error code that indicates why the event submission failed."
                                  }
                                ]
                              },
                              "ErrorMessage": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The error message that explains why the event submission failed."
                                  }
                                ]
                              }
                            },
                            "description": "Represents an event that failed to be submitted."
                          }
                        },
                        {
                          "description": "The successfully and unsuccessfully ingested events results. If the ingestion was successful, the entry has the event ID in it. Otherwise, you can use the error code and error message to identify the problem with the entry."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Entries"],
                "title": "PutEventsRequest",
                "properties": {
                  "Entries": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Time": {
                              "allOf": [
                                { "type": "string", "format": "date-time" },
                                {
                                  "description": "The time stamp of the event, per <a href=\"https://www.rfc-editor.org/rfc/rfc3339.txt\">RFC3339</a>. If no time stamp is provided, the time stamp of the <a>PutEvents</a> call is used."
                                }
                              ]
                            },
                            "Source": {
                              "allOf": [
                                { "type": "string" },
                                { "description": "The source of the event." }
                              ]
                            },
                            "Resources": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                {
                                  "description": "AWS resources, identified by Amazon Resource Name (ARN), which the event primarily concerns. Any number, including zero, may be present."
                                }
                              ]
                            },
                            "DetailType": {
                              "allOf": [
                                { "type": "string" },
                                {
                                  "description": "Free-form string used to decide what fields to expect in the event detail."
                                }
                              ]
                            },
                            "Detail": {
                              "allOf": [
                                { "type": "string" },
                                {
                                  "description": "A valid JSON string. There is no other schema imposed. The JSON string may contain fields and nested subobjects."
                                }
                              ]
                            },
                            "EventBusName": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "pattern": "[\\.\\-_A-Za-z0-9]+",
                                  "minLength": 1,
                                  "maxLength": 256
                                },
                                {
                                  "description": "The event bus that will receive the event. Only the rules that are associated with this event bus will be able to match the event."
                                }
                              ]
                            },
                            "TraceHeader": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 500
                                },
                                {
                                  "description": "<p>An X-Ray trade header, which is an http header (X-Amzn-Trace-Id) that contains the trace-id associated with the event.</p> <p>To learn more about X-Ray trace headers, see <a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-tracingheader\">Tracing header</a> in the X-Ray Developer Guide.</p>"
                                }
                              ]
                            }
                          },
                          "description": "Represents an event to be submitted."
                        },
                        "minItems": 1,
                        "maxItems": 10
                      },
                      {
                        "description": "The entry that defines an event in your system. You can specify several parameters for the entry such as the source and type of the event, resources associated with the event, and so on."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.PutEvents"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Put Events"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.PutPartnerEvents": {
      "post": {
        "operationId": "PutPartnerEvents",
        "description": "This is used by SaaS partners to write events to a customer's partner event bus. AWS customers do not use this operation.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "FailedEntryCount": {
                      "allOf": [
                        { "type": "integer" },
                        {
                          "description": "The number of events from this operation that could not be written to the partner event bus."
                        }
                      ]
                    },
                    "Entries": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "EventId": {
                                "allOf": [
                                  { "type": "string" },
                                  { "description": "The ID of the event." }
                                ]
                              },
                              "ErrorCode": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The error code that indicates why the event submission failed."
                                  }
                                ]
                              },
                              "ErrorMessage": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The error message that explains why the event submission failed."
                                  }
                                ]
                              }
                            },
                            "description": "Represents an event that a partner tried to generate, but failed."
                          }
                        },
                        {
                          "description": "The list of events from this operation that were successfully written to the partner event bus."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Entries"],
                "title": "PutPartnerEventsRequest",
                "properties": {
                  "Entries": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Time": {
                              "allOf": [
                                { "type": "string", "format": "date-time" },
                                {
                                  "description": "The date and time of the event."
                                }
                              ]
                            },
                            "Source": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "pattern": "aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}",
                                  "minLength": 1,
                                  "maxLength": 256
                                },
                                {
                                  "description": "The event source that is generating the evntry."
                                }
                              ]
                            },
                            "Resources": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                {
                                  "description": "AWS resources, identified by Amazon Resource Name (ARN), which the event primarily concerns. Any number, including zero, may be present."
                                }
                              ]
                            },
                            "DetailType": {
                              "allOf": [
                                { "type": "string" },
                                {
                                  "description": "A free-form string used to decide what fields to expect in the event detail."
                                }
                              ]
                            },
                            "Detail": {
                              "allOf": [
                                { "type": "string" },
                                {
                                  "description": "A valid JSON string. There is no other schema imposed. The JSON string may contain fields and nested subobjects."
                                }
                              ]
                            }
                          },
                          "description": "The details about an event generated by an SaaS partner."
                        },
                        "minItems": 1,
                        "maxItems": 20
                      },
                      {
                        "description": "The list of events to write to the event bus."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.PutPartnerEvents"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Put Partner Events"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.PutPermission": {
      "post": {
        "operationId": "PutPermission",
        "description": "<p>Running <code>PutPermission</code> permits the specified AWS account or AWS organization to put events to the specified <i>event bus</i>. Amazon EventBridge (CloudWatch Events) rules in your account are triggered by these events arriving to an event bus in your account. </p> <p>For another account to send events to your account, that external account must have an EventBridge rule with your account's event bus as a target.</p> <p>To enable multiple AWS accounts to put events to your event bus, run <code>PutPermission</code> once for each of these accounts. Or, if all the accounts are members of the same AWS organization, you can run <code>PutPermission</code> once specifying <code>Principal</code> as \"*\" and specifying the AWS organization ID in <code>Condition</code>, to grant permissions to all accounts in that organization.</p> <p>If you grant permissions using an organization, then accounts in that organization must specify a <code>RoleArn</code> with proper permissions when they use <code>PutTarget</code> to add your account's event bus as a target. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html\">Sending and Receiving Events Between AWS Accounts</a> in the <i>Amazon EventBridge User Guide</i>.</p> <p>The permission policy on the default event bus cannot exceed 10 KB in size.</p>",
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "PolicyLengthExceededException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "484": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Action", "Principal", "StatementId"],
                "title": "PutPermissionRequest",
                "properties": {
                  "EventBusName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The event bus associated with the rule. If you omit this, the default event bus is used."
                      }
                    ]
                  },
                  "Action": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "events:[a-zA-Z]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "The action that you are enabling the other account to perform. Currently, this must be <code>events:PutEvents</code>."
                      }
                    ]
                  },
                  "Principal": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "(\\d{12}|\\*)",
                        "minLength": 1,
                        "maxLength": 12
                      },
                      {
                        "description": "<p>The 12-digit AWS account ID that you are permitting to put events to your default event bus. Specify \"*\" to permit any account to put events to your default event bus.</p> <p>If you specify \"*\" without specifying <code>Condition</code>, avoid creating rules that may match undesirable events. To create more secure rules, make sure that the event pattern for each rule contains an <code>account</code> field with a specific account ID from which to receive events. Rules with an account field do not match any events sent from other accounts.</p>"
                      }
                    ]
                  },
                  "StatementId": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "An identifier string for the external account that you are granting permissions to. If you later want to revoke the permission for this external account, specify this <code>StatementId</code> when you run <a>RemovePermission</a>."
                      }
                    ]
                  },
                  "Condition": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": ["Type", "Key", "Value"],
                        "properties": {
                          "Type": {
                            "allOf": [
                              { "type": "string" },
                              {
                                "description": "Specifies the type of condition. Currently the only supported value is <code>StringEquals</code>."
                              }
                            ]
                          },
                          "Key": {
                            "allOf": [
                              { "type": "string" },
                              {
                                "description": "Specifies the key for the condition. Currently the only supported key is <code>aws:PrincipalOrgID</code>."
                              }
                            ]
                          },
                          "Value": {
                            "allOf": [
                              { "type": "string" },
                              {
                                "description": "Specifies the value for the key. Currently, this must be the ID of the organization."
                              }
                            ]
                          }
                        },
                        "description": "<p>A JSON string which you can use to limit the event bus permissions you are granting to only accounts that fulfill the condition. Currently, the only supported condition is membership in a certain AWS organization. The string must contain <code>Type</code>, <code>Key</code>, and <code>Value</code> fields. The <code>Value</code> field specifies the ID of the AWS organization. Following is an example value for <code>Condition</code>:</p> <p> <code>'{\"Type\" : \"StringEquals\", \"Key\": \"aws:PrincipalOrgID\", \"Value\": \"o-1234567890\"}'</code> </p>"
                      },
                      {
                        "description": "<p>This parameter enables you to limit the permission to accounts that fulfill a certain condition, such as being a member of a certain AWS organization. For more information about AWS Organizations, see <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html\">What Is AWS Organizations</a> in the <i>AWS Organizations User Guide</i>.</p> <p>If you specify <code>Condition</code> with an AWS organization ID, and specify \"*\" as the value for <code>Principal</code>, you grant permission to all the accounts in the named organization.</p> <p>The <code>Condition</code> is a JSON string which must contain <code>Type</code>, <code>Key</code>, and <code>Value</code> fields.</p>"
                      }
                    ]
                  },
                  "Policy": {
                    "allOf": [
                      { "type": "string" },
                      {
                        "description": "A JSON string that describes the permission policy statement. You can include a <code>Policy</code> parameter in the request instead of using the <code>StatementId</code>, <code>Action</code>, <code>Principal</code>, or <code>Condition</code> parameters."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.PutPermission"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Put Permission"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.PutRule": {
      "post": {
        "operationId": "PutRule",
        "description": "<p>Creates or updates the specified rule. Rules are enabled by default, or based on value of the state. You can disable a rule using <a>DisableRule</a>.</p> <p>A single rule watches for events from a single event bus. Events generated by AWS services go to your account's default event bus. Events generated by SaaS partner services or applications go to the matching partner event bus. If you have custom applications or services, you can specify whether their events go to your default event bus or a custom event bus that you have created. For more information, see <a>CreateEventBus</a>.</p> <p>If you are updating an existing rule, the rule is replaced with what you specify in this <code>PutRule</code> command. If you omit arguments in <code>PutRule</code>, the old values for those arguments are not kept. Instead, they are replaced with null values.</p> <p>When you create or update a rule, incoming events might not immediately start matching to new or updated rules. Allow a short period of time for changes to take effect.</p> <p>A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression, in which case the rule triggers on matching events as well as on a schedule.</p> <p>When you initially create a rule, you can optionally assign one or more tags to the rule. Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only rules with certain tag values. To use the <code>PutRule</code> operation and assign tags, you must have both the <code>events:PutRule</code> and <code>events:TagResource</code> permissions.</p> <p>If you are updating an existing rule, any tags you specify in the <code>PutRule</code> operation are ignored. To update the tags of an existing rule, use <a>TagResource</a> and <a>UntagResource</a>.</p> <p>Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs). However, EventBridge uses an exact match in event patterns and rules. Be sure to use the correct ARN characters when creating event patterns so that they match the ARN syntax in the event you want to match.</p> <p>In EventBridge, it is possible to create rules that lead to infinite loops, where a rule is fired repeatedly. For example, a rule might detect that ACLs have changed on an S3 bucket, and trigger software to change them to the desired state. If the rule is not written carefully, the subsequent change to the ACLs fires the rule again, creating an infinite loop.</p> <p>To prevent this, write the rules so that the triggered actions do not re-fire the same rule. For example, your rule could fire only if ACLs are found to be in a bad state, instead of after any change. </p> <p>An infinite loop can quickly cause higher than expected charges. We recommend that you use budgeting, which alerts you when charges exceed your specified limit. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/budgets-managing-costs.html\">Managing Your Costs with Budgets</a>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "RuleArn": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 1600 },
                        {
                          "description": "The Amazon Resource Name (ARN) of the rule."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "InvalidEventPatternException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "ManagedRuleException",
            "content": { "application/json": { "schema": {} } }
          },
          "484": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "485": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "PutRuleRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "The name of the rule that you are creating or updating."
                      }
                    ]
                  },
                  "ScheduleExpression": {
                    "allOf": [
                      { "type": "string", "maxLength": 256 },
                      {
                        "description": "The scheduling expression. For example, \"cron(0 20 * * ? *)\" or \"rate(5 minutes)\"."
                      }
                    ]
                  },
                  "EventPattern": {
                    "allOf": [
                      { "type": "string" },
                      {
                        "description": "The event pattern. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html\">Events and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>."
                      }
                    ]
                  },
                  "State": {
                    "allOf": [
                      { "type": "string", "enum": ["ENABLED", "DISABLED"] },
                      {
                        "description": "Indicates whether the rule is enabled or disabled."
                      }
                    ]
                  },
                  "Description": {
                    "allOf": [
                      { "type": "string", "maxLength": 512 },
                      { "description": "A description of the rule." }
                    ]
                  },
                  "RoleArn": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 1600 },
                      {
                        "description": "The Amazon Resource Name (ARN) of the IAM role associated with the rule."
                      }
                    ]
                  },
                  "Tags": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": ["Key", "Value"],
                          "properties": {
                            "Key": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 128
                                },
                                {
                                  "description": "A string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources."
                                }
                              ]
                            },
                            "Value": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "minLength": 0,
                                  "maxLength": 256
                                },
                                {
                                  "description": "The value for the specified tag key."
                                }
                              ]
                            }
                          },
                          "description": "A key-value pair associated with an AWS resource. In EventBridge, rules and event buses support tagging."
                        }
                      },
                      {
                        "description": "The list of key-value pairs to associate with the rule."
                      }
                    ]
                  },
                  "EventBusName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The event bus to associate with this rule. If you omit this, the default event bus is used."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.PutRule"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Put Rule"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.PutTargets": {
      "post": {
        "operationId": "PutTargets",
        "description": "<p>Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.</p> <p>Targets are the resources that are invoked when a rule is triggered.</p> <p>You can configure the following as targets for Events:</p> <ul> <li> <p>EC2 instances</p> </li> <li> <p>SSM Run Command</p> </li> <li> <p>SSM Automation</p> </li> <li> <p>AWS Lambda functions</p> </li> <li> <p>Data streams in Amazon Kinesis Data Streams</p> </li> <li> <p>Data delivery streams in Amazon Kinesis Data Firehose</p> </li> <li> <p>Amazon ECS tasks</p> </li> <li> <p>AWS Step Functions state machines</p> </li> <li> <p>AWS Batch jobs</p> </li> <li> <p>AWS CodeBuild projects</p> </li> <li> <p>Pipelines in AWS CodePipeline</p> </li> <li> <p>Amazon Inspector assessment templates</p> </li> <li> <p>Amazon SNS topics</p> </li> <li> <p>Amazon SQS queues, including FIFO queues</p> </li> <li> <p>The default event bus of another AWS account</p> </li> <li> <p>Amazon API Gateway REST APIs</p> </li> </ul> <p>Creating rules with built-in targets is supported only in the AWS Management Console. The built-in targets are <code>EC2 CreateSnapshot API call</code>, <code>EC2 RebootInstances API call</code>, <code>EC2 StopInstances API call</code>, and <code>EC2 TerminateInstances API call</code>. </p> <p>For some target types, <code>PutTargets</code> provides target-specific parameters. If the target is a Kinesis data stream, you can optionally specify which shard the event goes to by using the <code>KinesisParameters</code> argument. To invoke a command on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code> field.</p> <p>To be able to make API calls against the resources that you own, Amazon EventBridge (CloudWatch Events) needs the appropriate permissions. For AWS Lambda and Amazon SNS resources, EventBridge relies on resource-based policies. For EC2 instances, Kinesis data streams, AWS Step Functions state machines and API Gateway REST APIs, EventBridge relies on IAM roles that you specify in the <code>RoleARN</code> argument in <code>PutTargets</code>. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/auth-and-access-control-eventbridge.html\">Authentication and Access Control</a> in the <i>Amazon EventBridge User Guide</i>.</p> <p>If another AWS account is in the same region and has granted you permission (using <code>PutPermission</code>), you can send events to that account. Set that account's event bus as a target of the rules in your account. To send the matched events to the other account, specify that account's event bus as the <code>Arn</code> value when you run <code>PutTargets</code>. If your account sends events to another account, your account is charged for each sent event. Each event sent to another account is charged as a custom event. The account receiving the event is not charged. For more information, see <a href=\"https://aws.amazon.com/eventbridge/pricing/\">Amazon EventBridge (CloudWatch Events) Pricing</a>.</p> <note> <p> <code>Input</code>, <code>InputPath</code>, and <code>InputTransformer</code> are not available with <code>PutTarget</code> if the target is an event bus of a different AWS account.</p> </note> <p>If you are setting the event bus of another account as the target, and that account granted permission to your account through an organization instead of directly by the account ID, then you must specify a <code>RoleArn</code> with proper permissions in the <code>Target</code> structure. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html\">Sending and Receiving Events Between AWS Accounts</a> in the <i>Amazon EventBridge User Guide</i>.</p> <p>For more information about enabling cross-account events, see <a>PutPermission</a>.</p> <p> <b>Input</b>, <b>InputPath</b>, and <b>InputTransformer</b> are mutually exclusive and optional parameters of a target. When a rule is triggered due to a matched event:</p> <ul> <li> <p>If none of the following arguments are specified for a target, then the entire event is passed to the target in JSON format (unless the target is Amazon EC2 Run Command or Amazon ECS task, in which case nothing from the event is passed to the target).</p> </li> <li> <p>If <b>Input</b> is specified in the form of valid JSON, then the matched event is overridden with this constant.</p> </li> <li> <p>If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>), then only the part of the event specified in the path is passed to the target (for example, only the detail part of the event is passed).</p> </li> <li> <p>If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are extracted from the event and used as values in a template that you specify as the input to the target.</p> </li> </ul> <p>When you specify <code>InputPath</code> or <code>InputTransformer</code>, you must use JSON dot notation, not bracket notation.</p> <p>When you add targets to a rule and the associated rule triggers soon after, new or updated targets might not be immediately invoked. Allow a short period of time for changes to take effect.</p> <p>This action can partially fail if too many requests are made at the same time. If that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry in <code>FailedEntries</code> provides the ID of the failed target and the error code.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "FailedEntryCount": {
                      "allOf": [
                        { "type": "integer" },
                        { "description": "The number of failed entries." }
                      ]
                    },
                    "FailedEntries": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "TargetId": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "[\\.\\-_A-Za-z0-9]+",
                                    "minLength": 1,
                                    "maxLength": 64
                                  },
                                  { "description": "The ID of the target." }
                                ]
                              },
                              "ErrorCode": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The error code that indicates why the target addition failed. If the value is <code>ConcurrentModificationException</code>, too many requests were made at the same time."
                                  }
                                ]
                              },
                              "ErrorMessage": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The error message that explains why the target addition failed."
                                  }
                                ]
                              }
                            },
                            "description": "Represents a target that failed to be added to a rule."
                          }
                        },
                        { "description": "The failed target entries." }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "ManagedRuleException",
            "content": { "application/json": { "schema": {} } }
          },
          "484": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Rule", "Targets"],
                "title": "PutTargetsRequest",
                "properties": {
                  "Rule": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The name of the rule." }
                    ]
                  },
                  "EventBusName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The name of the event bus associated with the rule. If you omit this, the default event bus is used."
                      }
                    ]
                  },
                  "Targets": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": ["Id", "Arn"],
                          "properties": {
                            "Id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "pattern": "[\\.\\-_A-Za-z0-9]+",
                                  "minLength": 1,
                                  "maxLength": 64
                                },
                                { "description": "The ID of the target." }
                              ]
                            },
                            "Arn": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 1600
                                },
                                {
                                  "description": "The Amazon Resource Name (ARN) of the target."
                                }
                              ]
                            },
                            "RoleArn": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 1600
                                },
                                {
                                  "description": "The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. If one rule triggers multiple targets, you can use a different IAM role for each target."
                                }
                              ]
                            },
                            "Input": {
                              "allOf": [
                                { "type": "string", "maxLength": 8192 },
                                {
                                  "description": "Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. For more information, see <a href=\"http://www.rfc-editor.org/rfc/rfc7159.txt\">The JavaScript Object Notation (JSON) Data Interchange Format</a>."
                                }
                              ]
                            },
                            "InputPath": {
                              "allOf": [
                                { "type": "string", "maxLength": 256 },
                                {
                                  "description": "The value of the JSONPath that is used for extracting part of the matched event when passing it to the target. You must use JSON dot notation, not bracket notation. For more information about JSON paths, see <a href=\"http://goessner.net/articles/JsonPath/\">JSONPath</a>."
                                }
                              ]
                            },
                            "InputTransformer": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": ["InputTemplate"],
                                  "properties": {
                                    "InputPathsMap": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "maxProperties": 10,
                                          "additionalProperties": {
                                            "type": "string",
                                            "maxLength": 256
                                          }
                                        },
                                        {
                                          "description": "<p>Map of JSON paths to be extracted from the event. You can then insert these in the template in <code>InputTemplate</code> to produce the output you want to be sent to the target.</p> <p> <code>InputPathsMap</code> is an array key-value pairs, where each value is a valid JSON path. You can have as many as 10 key-value pairs. You must use JSON dot notation, not bracket notation.</p> <p>The keys cannot start with \"AWS.\" </p>"
                                        }
                                      ]
                                    },
                                    "InputTemplate": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 8192
                                        },
                                        {
                                          "description": "<p>Input template where you specify placeholders that will be filled with the values of the keys from <code>InputPathsMap</code> to customize the data sent to the target. Enclose each <code>InputPathsMaps</code> value in brackets: &lt;<i>value</i>&gt; The InputTemplate must be valid JSON.</p> <p>If <code>InputTemplate</code> is a JSON object (surrounded by curly braces), the following restrictions apply:</p> <ul> <li> <p>The placeholder cannot be used as an object key.</p> </li> <li> <p>Object values cannot include quote marks.</p> </li> </ul> <p>The following example shows the syntax for using <code>InputPathsMap</code> and <code>InputTemplate</code>.</p> <p> <code> \"InputTransformer\":</code> </p> <p> <code>{</code> </p> <p> <code>\"InputPathsMap\": {\"instance\": \"$.detail.instance\",\"status\": \"$.detail.status\"},</code> </p> <p> <code>\"InputTemplate\": \"&lt;instance&gt; is in state &lt;status&gt;\"</code> </p> <p> <code>}</code> </p> <p>To have the <code>InputTemplate</code> include quote marks within a JSON string, escape each quote marks with a slash, as in the following example:</p> <p> <code> \"InputTransformer\":</code> </p> <p> <code>{</code> </p> <p> <code>\"InputPathsMap\": {\"instance\": \"$.detail.instance\",\"status\": \"$.detail.status\"},</code> </p> <p> <code>\"InputTemplate\": \"&lt;instance&gt; is in state \\\"&lt;status&gt;\\\"\"</code> </p> <p> <code>}</code> </p>"
                                        }
                                      ]
                                    }
                                  },
                                  "description": "Contains the parameters needed for you to provide custom input to a target based on one or more pieces of data extracted from the event."
                                },
                                {
                                  "description": "Settings to enable you to provide custom input to a target based on certain event data. You can extract one or more key-value pairs from the event and then use that data to send customized input to the target."
                                }
                              ]
                            },
                            "KinesisParameters": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": ["PartitionKeyPath"],
                                  "properties": {
                                    "PartitionKeyPath": {
                                      "allOf": [
                                        { "type": "string", "maxLength": 256 },
                                        {
                                          "description": "The JSON path to be extracted from the event and used as the partition key. For more information, see <a href=\"https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#partition-key\">Amazon Kinesis Streams Key Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "This object enables you to specify a JSON path to extract from the event and use as the partition key for the Amazon Kinesis data stream, so that you can control the shard to which the event goes. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key."
                                },
                                {
                                  "description": "The custom parameter you can use to control the shard assignment, when the target is a Kinesis data stream. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key."
                                }
                              ]
                            },
                            "RunCommandParameters": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": ["RunCommandTargets"],
                                  "properties": {
                                    "RunCommandTargets": {
                                      "allOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": ["Key", "Values"],
                                            "properties": {
                                              "Key": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$",
                                                    "minLength": 1,
                                                    "maxLength": 128
                                                  },
                                                  {
                                                    "description": "Can be either <code>tag:</code> <i>tag-key</i> or <code>InstanceIds</code>."
                                                  }
                                                ]
                                              },
                                              "Values": {
                                                "allOf": [
                                                  {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string",
                                                      "minLength": 1,
                                                      "maxLength": 256
                                                    },
                                                    "minItems": 1,
                                                    "maxItems": 50
                                                  },
                                                  {
                                                    "description": "If <code>Key</code> is <code>tag:</code> <i>tag-key</i>, <code>Values</code> is a list of tag values. If <code>Key</code> is <code>InstanceIds</code>, <code>Values</code> is a list of Amazon EC2 instance IDs."
                                                  }
                                                ]
                                              }
                                            },
                                            "description": "Information about the EC2 instances that are to be sent the command, specified as key-value pairs. Each <code>RunCommandTarget</code> block can include only one key, but this key may specify multiple values."
                                          },
                                          "minItems": 1,
                                          "maxItems": 5
                                        },
                                        {
                                          "description": "Currently, we support including only one RunCommandTarget block, which specifies either an array of InstanceIds or a tag."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "This parameter contains the criteria (either InstanceIds or a tag) used to specify which EC2 instances are to be sent the command. "
                                },
                                {
                                  "description": "Parameters used when you are using the rule to invoke Amazon EC2 Run Command."
                                }
                              ]
                            },
                            "EcsParameters": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": ["TaskDefinitionArn"],
                                  "properties": {
                                    "TaskDefinitionArn": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 1600
                                        },
                                        {
                                          "description": "The ARN of the task definition to use if the event target is an Amazon ECS task. "
                                        }
                                      ]
                                    },
                                    "TaskCount": {
                                      "allOf": [
                                        { "type": "integer", "minimum": 1 },
                                        {
                                          "description": "The number of tasks to create based on <code>TaskDefinition</code>. The default is 1."
                                        }
                                      ]
                                    },
                                    "LaunchType": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "enum": ["EC2", "FARGATE", "EXTERNAL"]
                                        },
                                        {
                                          "description": "Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The <code>FARGATE</code> value is supported only in the Regions where AWS Fargate with Amazon ECS is supported. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS-Fargate.html\">AWS Fargate on Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>."
                                        }
                                      ]
                                    },
                                    "NetworkConfiguration": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "awsvpcConfiguration": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": ["Subnets"],
                                                  "properties": {
                                                    "Subnets": {
                                                      "allOf": [
                                                        {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        {
                                                          "description": "Specifies the subnets associated with the task. These subnets must all be in the same VPC. You can specify as many as 16 subnets."
                                                        }
                                                      ]
                                                    },
                                                    "SecurityGroups": {
                                                      "allOf": [
                                                        {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        {
                                                          "description": "Specifies the security groups associated with the task. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used."
                                                        }
                                                      ]
                                                    },
                                                    "AssignPublicIp": {
                                                      "allOf": [
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "ENABLED",
                                                            "DISABLED"
                                                          ]
                                                        },
                                                        {
                                                          "description": "Specifies whether the task's elastic network interface receives a public IP address. You can specify <code>ENABLED</code> only when <code>LaunchType</code> in <code>EcsParameters</code> is set to <code>FARGATE</code>."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "description": "This structure specifies the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the <code>awsvpc</code> network mode."
                                                },
                                                {
                                                  "description": "Use this structure to specify the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the <code>awsvpc</code> network mode."
                                                }
                                              ]
                                            }
                                          },
                                          "description": "This structure specifies the network configuration for an ECS task."
                                        },
                                        {
                                          "description": "<p>Use this structure if the ECS task uses the <code>awsvpc</code> network mode. This structure specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. This structure is required if <code>LaunchType</code> is <code>FARGATE</code> because the <code>awsvpc</code> mode is required for Fargate tasks.</p> <p>If you specify <code>NetworkConfiguration</code> when the target ECS task does not use the <code>awsvpc</code> network mode, the task fails.</p>"
                                        }
                                      ]
                                    },
                                    "PlatformVersion": {
                                      "allOf": [
                                        { "type": "string" },
                                        {
                                          "description": "<p>Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as <code>1.1.0</code>.</p> <p>This structure is used only if <code>LaunchType</code> is <code>FARGATE</code>. For more information about valid platform versions, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\">AWS Fargate Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>"
                                        }
                                      ]
                                    },
                                    "Group": {
                                      "allOf": [
                                        { "type": "string" },
                                        {
                                          "description": "Specifies an ECS task group for the task. The maximum length is 255 characters."
                                        }
                                      ]
                                    },
                                    "CapacityProviderStrategy": {
                                      "allOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": ["capacityProvider"],
                                            "properties": {
                                              "capacityProvider": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 255
                                                  },
                                                  {
                                                    "description": "The short name of the capacity provider."
                                                  }
                                                ]
                                              },
                                              "weight": {
                                                "allOf": [
                                                  {
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "maximum": 1000
                                                  },
                                                  {
                                                    "description": "The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied."
                                                  }
                                                ]
                                              },
                                              "base": {
                                                "allOf": [
                                                  {
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "maximum": 100000
                                                  },
                                                  {
                                                    "description": "The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. If no value is specified, the default value of 0 is used. "
                                                  }
                                                ]
                                              }
                                            },
                                            "description": "The details of a capacity provider strategy. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CapacityProviderStrategyItem.html\">CapacityProviderStrategyItem</a> in the Amazon ECS API Reference."
                                          },
                                          "maxItems": 6
                                        },
                                        {
                                          "description": "<p>The capacity provider strategy to use for the task.</p> <p>If a <code>capacityProviderStrategy</code> is specified, the <code>launchType</code> parameter must be omitted. If no <code>capacityProviderStrategy</code> or launchType is specified, the <code>defaultCapacityProviderStrategy</code> for the cluster is used. </p>"
                                        }
                                      ]
                                    },
                                    "EnableECSManagedTags": {
                                      "allOf": [
                                        { "type": "boolean" },
                                        {
                                          "description": "Specifies whether to enable Amazon ECS managed tags for the task. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html\">Tagging Your Amazon ECS Resources</a> in the Amazon Elastic Container Service Developer Guide. "
                                        }
                                      ]
                                    },
                                    "EnableExecuteCommand": {
                                      "allOf": [
                                        { "type": "boolean" },
                                        {
                                          "description": "Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task."
                                        }
                                      ]
                                    },
                                    "PlacementConstraints": {
                                      "allOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "distinctInstance",
                                                      "memberOf"
                                                    ]
                                                  },
                                                  {
                                                    "description": "The type of constraint. Use distinctInstance to ensure that each task in a particular group is running on a different container instance. Use memberOf to restrict the selection to a group of valid candidates. "
                                                  }
                                                ]
                                              },
                                              "expression": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "maxLength": 2000
                                                  },
                                                  {
                                                    "description": "A cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is <code>distinctInstance</code>. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html\">Cluster Query Language</a> in the Amazon Elastic Container Service Developer Guide. "
                                                  }
                                                ]
                                              }
                                            },
                                            "description": "An object representing a constraint on task placement. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html\">Task Placement Constraints</a> in the Amazon Elastic Container Service Developer Guide."
                                          },
                                          "maxItems": 10
                                        },
                                        {
                                          "description": "An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime)."
                                        }
                                      ]
                                    },
                                    "PlacementStrategy": {
                                      "allOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "random",
                                                      "spread",
                                                      "binpack"
                                                    ]
                                                  },
                                                  {
                                                    "description": "The type of placement strategy. The random placement strategy randomly places tasks on available candidates. The spread placement strategy spreads placement across available candidates evenly based on the field parameter. The binpack strategy places tasks on available candidates that have the least available amount of the resource that is specified with the field parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory (but still enough to run the task). "
                                                  }
                                                ]
                                              },
                                              "field": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "maxLength": 255
                                                  },
                                                  {
                                                    "description": "The field to apply the placement strategy against. For the spread placement strategy, valid values are instanceId (or host, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone. For the binpack placement strategy, valid values are cpu and memory. For the random placement strategy, this field is not used. "
                                                  }
                                                ]
                                              }
                                            },
                                            "description": "The task placement strategy for a task or service. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html\">Task Placement Strategies</a> in the Amazon Elastic Container Service Service Developer Guide."
                                          },
                                          "maxItems": 5
                                        },
                                        {
                                          "description": "The placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task. "
                                        }
                                      ]
                                    },
                                    "PropagateTags": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "enum": ["TASK_DEFINITION"]
                                        },
                                        {
                                          "description": "Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the TagResource API action. "
                                        }
                                      ]
                                    },
                                    "ReferenceId": {
                                      "allOf": [
                                        { "type": "string", "maxLength": 1024 },
                                        {
                                          "description": "The reference ID to use for the task."
                                        }
                                      ]
                                    },
                                    "Tags": {
                                      "allOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": ["Key", "Value"],
                                            "properties": {
                                              "Key": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 128
                                                  },
                                                  {
                                                    "description": "A string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources."
                                                  }
                                                ]
                                              },
                                              "Value": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "minLength": 0,
                                                    "maxLength": 256
                                                  },
                                                  {
                                                    "description": "The value for the specified tag key."
                                                  }
                                                ]
                                              }
                                            },
                                            "description": "A key-value pair associated with an AWS resource. In EventBridge, rules and event buses support tagging."
                                          }
                                        },
                                        {
                                          "description": "The metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html#ECS-RunTask-request-tags\">RunTask</a> in the Amazon ECS API Reference."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "The custom parameters to be used when the target is an Amazon ECS task."
                                },
                                {
                                  "description": "Contains the Amazon ECS task definition and task count to be used, if the event target is an Amazon ECS task. For more information about Amazon ECS tasks, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\">Task Definitions </a> in the <i>Amazon EC2 Container Service Developer Guide</i>."
                                }
                              ]
                            },
                            "BatchParameters": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": ["JobDefinition", "JobName"],
                                  "properties": {
                                    "JobDefinition": {
                                      "allOf": [
                                        { "type": "string" },
                                        {
                                          "description": "The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist."
                                        }
                                      ]
                                    },
                                    "JobName": {
                                      "allOf": [
                                        { "type": "string" },
                                        {
                                          "description": "The name to use for this execution of the job, if the target is an AWS Batch job."
                                        }
                                      ]
                                    },
                                    "ArrayProperties": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "Size": {
                                              "allOf": [
                                                { "type": "integer" },
                                                {
                                                  "description": "The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000."
                                                }
                                              ]
                                            }
                                          },
                                          "description": "The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an AWS Batch job."
                                        },
                                        {
                                          "description": "The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an AWS Batch job."
                                        }
                                      ]
                                    },
                                    "RetryStrategy": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "Attempts": {
                                              "allOf": [
                                                { "type": "integer" },
                                                {
                                                  "description": "The number of times to attempt to retry, if the job fails. Valid values are 1–10."
                                                }
                                              ]
                                            }
                                          },
                                          "description": "The retry strategy to use for failed jobs, if the target is an AWS Batch job. If you specify a retry strategy here, it overrides the retry strategy defined in the job definition."
                                        },
                                        {
                                          "description": "The retry strategy to use for failed jobs, if the target is an AWS Batch job. The retry strategy is the number of times to retry the failed job execution. Valid values are 1–10. When you specify a retry strategy here, it overrides the retry strategy defined in the job definition."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "The custom parameters to be used when the target is an AWS Batch job."
                                },
                                {
                                  "description": "If the event target is an AWS Batch job, this contains the job definition, job name, and other parameters. For more information, see <a href=\"https://docs.aws.amazon.com/batch/latest/userguide/jobs.html\">Jobs</a> in the <i>AWS Batch User Guide</i>."
                                }
                              ]
                            },
                            "SqsParameters": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "MessageGroupId": {
                                      "allOf": [
                                        { "type": "string" },
                                        {
                                          "description": "The FIFO message group ID to use as the target."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "This structure includes the custom parameter to be used when the target is an SQS FIFO queue."
                                },
                                {
                                  "description": "<p>Contains the message group ID to use when the target is a FIFO queue.</p> <p>If you specify an SQS FIFO queue as a target, the queue must have content-based deduplication enabled.</p>"
                                }
                              ]
                            },
                            "HttpParameters": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "PathParameterValues": {
                                      "allOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "pattern": "^(?!\\s*$).+"
                                          }
                                        },
                                        {
                                          "description": "The path parameter values to be used to populate API Gateway REST API path wildcards (\"*\")."
                                        }
                                      ]
                                    },
                                    "HeaderParameters": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string",
                                            "pattern": "^[ \\t]*[\\x20-\\x7E]+([ \\t]+[\\x20-\\x7E]+)*[ \\t]*$",
                                            "maxLength": 512
                                          }
                                        },
                                        {
                                          "description": "The headers that need to be sent as part of request invoking the API Gateway REST API."
                                        }
                                      ]
                                    },
                                    "QueryStringParameters": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string",
                                            "pattern": "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F]+",
                                            "maxLength": 512
                                          }
                                        },
                                        {
                                          "description": "The query string keys/values that need to be sent as part of request invoking the API Gateway REST API."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "These are custom parameter to be used when the target is an API Gateway REST APIs."
                                },
                                {
                                  "description": "<p>Contains the HTTP parameters to use when the target is a API Gateway REST endpoint.</p> <p>If you specify an API Gateway REST API as a target, you can use this parameter to specify headers, path parameter, query string keys/values as part of your target invoking request.</p>"
                                }
                              ]
                            },
                            "RedshiftDataParameters": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": ["Database", "Sql"],
                                  "properties": {
                                    "SecretManagerArn": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "pattern": "(^arn:aws([a-z]|\\-)*:secretsmanager:[a-z0-9-.]+:.*)|(\\$(\\.[\\w_-]+(\\[(\\d+|\\*)\\])*)*)",
                                          "minLength": 1,
                                          "maxLength": 1600
                                        },
                                        {
                                          "description": "The name or ARN of the secret that enables access to the database. Required when authenticating using AWS Secrets Manager."
                                        }
                                      ]
                                    },
                                    "Database": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "pattern": "([a-zA-Z0-9]+)|(\\$(\\.[\\w_-]+(\\[(\\d+|\\*)\\])*)*)",
                                          "minLength": 1,
                                          "maxLength": 64
                                        },
                                        {
                                          "description": "The name of the database. Required when authenticating using temporary credentials."
                                        }
                                      ]
                                    },
                                    "DbUser": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "pattern": "([a-zA-Z0-9]+)|(\\$(\\.[\\w_-]+(\\[(\\d+|\\*)\\])*)*)",
                                          "minLength": 1,
                                          "maxLength": 128
                                        },
                                        {
                                          "description": "The database user name. Required when authenticating using temporary credentials."
                                        }
                                      ]
                                    },
                                    "Sql": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 100000
                                        },
                                        {
                                          "description": "The SQL statement text to run."
                                        }
                                      ]
                                    },
                                    "StatementName": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 500
                                        },
                                        {
                                          "description": "The name of the SQL statement. You can name the SQL statement when you create it to identify the query."
                                        }
                                      ]
                                    },
                                    "WithEvent": {
                                      "allOf": [
                                        { "type": "boolean" },
                                        {
                                          "description": "Indicates whether to send an event back to EventBridge after the SQL statement runs."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "These are custom parameters to be used when the target is a Redshift cluster to invoke the Redshift Data API ExecuteStatement based on EventBridge events."
                                },
                                {
                                  "description": "<p>Contains the Redshift Data API parameters to use when the target is a Redshift cluster.</p> <p>If you specify a Redshift Cluster as a Target, you can use this to specify parameters to invoke the Redshift Data API ExecuteStatement based on EventBridge events.</p>"
                                }
                              ]
                            },
                            "DeadLetterConfig": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Arn": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 1600
                                        },
                                        {
                                          "description": "The ARN of the SQS queue specified as the target for the dead-letter queue."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "A <code>DeadLetterConfig</code> object that contains information about a dead-letter queue configuration."
                                },
                                {
                                  "description": "The <code>DeadLetterConfig</code> that defines the target queue to send dead-letter queue events to."
                                }
                              ]
                            },
                            "RetryPolicy": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "MaximumRetryAttempts": {
                                      "allOf": [
                                        {
                                          "type": "integer",
                                          "minimum": 0,
                                          "maximum": 185
                                        },
                                        {
                                          "description": "The maximum number of retry attempts to make before the request fails. Retry attempts continue until either the maximum number of attempts is made or until the duration of the <code>MaximumEventAgeInSeconds</code> is met."
                                        }
                                      ]
                                    },
                                    "MaximumEventAgeInSeconds": {
                                      "allOf": [
                                        {
                                          "type": "integer",
                                          "minimum": 60,
                                          "maximum": 86400
                                        },
                                        {
                                          "description": "The maximum amount of time, in seconds, to continue to make retry attempts."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "A <code>RetryPolicy</code> object that includes information about the retry policy settings."
                                },
                                {
                                  "description": "The <code>RetryPolicy</code> object that contains the retry policy configuration to use for the dead-letter queue."
                                }
                              ]
                            },
                            "SageMakerPipelineParameters": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "PipelineParameterList": {
                                      "allOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": ["Name", "Value"],
                                            "properties": {
                                              "Name": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
                                                    "minLength": 1,
                                                    "maxLength": 256
                                                  },
                                                  {
                                                    "description": "Name of parameter to start execution of a SageMaker Model Building Pipeline."
                                                  }
                                                ]
                                              },
                                              "Value": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "maxLength": 1024
                                                  },
                                                  {
                                                    "description": "Value of parameter to start execution of a SageMaker Model Building Pipeline."
                                                  }
                                                ]
                                              }
                                            },
                                            "description": "Name/Value pair of a parameter to start execution of a SageMaker Model Building Pipeline."
                                          },
                                          "minItems": 0,
                                          "maxItems": 200
                                        },
                                        {
                                          "description": "List of Parameter names and values for SageMaker Model Building Pipeline execution."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "These are custom parameters to use when the target is a SageMaker Model Building Pipeline that starts based on EventBridge events."
                                },
                                {
                                  "description": "<p>Contains the SageMaker Model Building Pipeline parameters to start execution of a SageMaker Model Building Pipeline.</p> <p>If you specify a SageMaker Model Building Pipeline as a target, you can use this to specify parameters to start a pipeline execution based on EventBridge events.</p>"
                                }
                              ]
                            }
                          },
                          "description": "<p>Targets are the resources to be invoked when a rule is triggered. For a complete list of services and resources that can be set as a target, see <a>PutTargets</a>.</p> <p>If you are setting the event bus of another account as the target, and that account granted permission to your account through an organization instead of directly by the account ID, then you must specify a <code>RoleArn</code> with proper permissions in the <code>Target</code> structure. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html\">Sending and Receiving Events Between AWS Accounts</a> in the <i>Amazon EventBridge User Guide</i>.</p>"
                        },
                        "minItems": 1,
                        "maxItems": 100
                      },
                      {
                        "description": "The targets to update or add to the rule."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.PutTargets"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Put Targets"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.RemovePermission": {
      "post": {
        "operationId": "RemovePermission",
        "description": "Revokes the permission of another AWS account to be able to put events to the specified event bus. Specify the account to revoke by the <code>StatementId</code> value that you associated with the account when you granted it permission with <code>PutPermission</code>. You can find the <code>StatementId</code> by using <a>DescribeEventBus</a>.",
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "OperationDisabledException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["StatementId"],
                "title": "RemovePermissionRequest",
                "properties": {
                  "StatementId": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "The statement ID corresponding to the account that is no longer allowed to put events to the default event bus."
                      }
                    ]
                  },
                  "EventBusName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The name of the event bus to revoke permissions for. If you omit this, the default event bus is used."
                      }
                    ]
                  },
                  "RemoveAllPermissions": {
                    "allOf": [
                      { "type": "boolean" },
                      {
                        "description": "Specifies whether to remove all permissions."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.RemovePermission"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Remove Permission"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.RemoveTargets": {
      "post": {
        "operationId": "RemoveTargets",
        "description": "<p>Removes the specified targets from the specified rule. When the rule is triggered, those targets are no longer be invoked.</p> <p>When you remove a target, when the associated rule triggers, removed targets might continue to be invoked. Allow a short period of time for changes to take effect.</p> <p>This action can partially fail if too many requests are made at the same time. If that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry in <code>FailedEntries</code> provides the ID of the failed target and the error code.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "FailedEntryCount": {
                      "allOf": [
                        { "type": "integer" },
                        { "description": "The number of failed entries." }
                      ]
                    },
                    "FailedEntries": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "TargetId": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "[\\.\\-_A-Za-z0-9]+",
                                    "minLength": 1,
                                    "maxLength": 64
                                  },
                                  { "description": "The ID of the target." }
                                ]
                              },
                              "ErrorCode": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The error code that indicates why the target removal failed. If the value is <code>ConcurrentModificationException</code>, too many requests were made at the same time."
                                  }
                                ]
                              },
                              "ErrorMessage": {
                                "allOf": [
                                  { "type": "string" },
                                  {
                                    "description": "The error message that explains why the target removal failed."
                                  }
                                ]
                              }
                            },
                            "description": "Represents a target that failed to be removed from a rule."
                          }
                        },
                        { "description": "The failed target entries." }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "ManagedRuleException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Rule", "Ids"],
                "title": "RemoveTargetsRequest",
                "properties": {
                  "Rule": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The name of the rule." }
                    ]
                  },
                  "EventBusName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[/\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 256
                      },
                      {
                        "description": "The name of the event bus associated with the rule."
                      }
                    ]
                  },
                  "Ids": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "[\\.\\-_A-Za-z0-9]+",
                          "minLength": 1,
                          "maxLength": 64
                        },
                        "minItems": 1,
                        "maxItems": 100
                      },
                      {
                        "description": "The IDs of the targets to remove from the rule."
                      }
                    ]
                  },
                  "Force": {
                    "allOf": [
                      { "type": "boolean" },
                      {
                        "description": "If this is a managed rule, created by an AWS service on your behalf, you must specify <code>Force</code> as <code>True</code> to remove targets. This parameter is ignored for rules that are not managed rules. You can check whether a rule is a managed rule by using <code>DescribeRule</code> or <code>ListRules</code> and checking the <code>ManagedBy</code> field of the response."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.RemoveTargets"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Remove Targets"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.TagResource": {
      "post": {
        "operationId": "TagResource",
        "description": "<p>Assigns one or more tags (key-value pairs) to the specified EventBridge resource. Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values. In EventBridge, rules and event buses can be tagged.</p> <p>Tags don't have any semantic meaning to AWS and are interpreted strictly as strings of characters.</p> <p>You can use the <code>TagResource</code> action with a resource that already has tags. If you specify a new tag key, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "ManagedRuleException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ResourceARN", "Tags"],
                "title": "TagResourceRequest",
                "properties": {
                  "ResourceARN": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 1600 },
                      {
                        "description": "The ARN of the EventBridge resource that you're adding tags to."
                      }
                    ]
                  },
                  "Tags": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": ["Key", "Value"],
                          "properties": {
                            "Key": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 128
                                },
                                {
                                  "description": "A string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources."
                                }
                              ]
                            },
                            "Value": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "minLength": 0,
                                  "maxLength": 256
                                },
                                {
                                  "description": "The value for the specified tag key."
                                }
                              ]
                            }
                          },
                          "description": "A key-value pair associated with an AWS resource. In EventBridge, rules and event buses support tagging."
                        }
                      },
                      {
                        "description": "The list of key-value pairs to associate with the resource."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.TagResource"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Tag Resource"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.TestEventPattern": {
      "post": {
        "operationId": "TestEventPattern",
        "description": "<p>Tests whether the specified event pattern matches the provided event.</p> <p>Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs). However, EventBridge uses an exact match in event patterns and rules. Be sure to use the correct ARN characters when creating event patterns so that they match the ARN syntax in the event you want to match.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Result": {
                      "allOf": [
                        { "type": "boolean" },
                        {
                          "description": "Indicates whether the event matches the event pattern."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "InvalidEventPatternException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["EventPattern", "Event"],
                "title": "TestEventPatternRequest",
                "properties": {
                  "EventPattern": {
                    "allOf": [
                      { "type": "string" },
                      {
                        "description": "The event pattern. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html\">Events and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>."
                      }
                    ]
                  },
                  "Event": {
                    "allOf": [
                      { "type": "string" },
                      {
                        "description": "The event, in JSON format, to test against the event pattern."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.TestEventPattern"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Test Event Pattern"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.UntagResource": {
      "post": {
        "operationId": "UntagResource",
        "description": "Removes one or more tags from the specified EventBridge resource. In Amazon EventBridge (CloudWatch Events, rules and event buses can be tagged.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "ManagedRuleException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ResourceARN", "TagKeys"],
                "title": "UntagResourceRequest",
                "properties": {
                  "ResourceARN": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 1600 },
                      {
                        "description": "The ARN of the EventBridge resource from which you are removing tags."
                      }
                    ]
                  },
                  "TagKeys": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128
                        }
                      },
                      {
                        "description": "The list of tag keys to remove from the resource."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.UntagResource"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Untag Resource"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.CancelReplay": {
      "post": {
        "operationId": "CancelReplay",
        "description": "Cancels the specified replay.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ReplayArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:.+\\/[\\.\\-_A-Za-z0-9]+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        { "description": "The ARN of the replay to cancel." }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "STARTING",
                            "RUNNING",
                            "CANCELLING",
                            "COMPLETED",
                            "CANCELLED",
                            "FAILED"
                          ]
                        },
                        { "description": "The current state of the replay." }
                      ]
                    },
                    "StateReason": {
                      "allOf": [
                        { "type": "string", "pattern": ".*", "maxLength": 512 },
                        {
                          "description": "The reason that the replay is in the current state."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "IllegalStatusException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ReplayName"],
                "title": "CancelReplayRequest",
                "properties": {
                  "ReplayName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The name of the replay to cancel." }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.CancelReplay"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Cancel Replay"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.CreateArchive": {
      "post": {
        "operationId": "CreateArchive",
        "description": "Creates an archive of events with the specified settings. When you create an archive, incoming events might not immediately start being sent to the archive. Allow a short period of time for changes to take effect.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ArchiveArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:.+\\/.+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        {
                          "description": "The ARN of the archive that was created."
                        }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "ENABLED",
                            "DISABLED",
                            "CREATING",
                            "UPDATING",
                            "CREATE_FAILED",
                            "UPDATE_FAILED"
                          ]
                        },
                        {
                          "description": "The state of the archive that was created."
                        }
                      ]
                    },
                    "StateReason": {
                      "allOf": [
                        { "type": "string", "pattern": ".*", "maxLength": 512 },
                        {
                          "description": "The reason that the archive is in the state."
                        }
                      ]
                    },
                    "CreationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "The time at which the archive was created."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceAlreadyExistsException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "484": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": {} } }
          },
          "485": {
            "description": "InvalidEventPatternException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ArchiveName", "EventSourceArn"],
                "title": "CreateArchiveRequest",
                "properties": {
                  "ArchiveName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 48
                      },
                      { "description": "The name for the archive to create." }
                    ]
                  },
                  "EventSourceArn": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 1600 },
                      {
                        "description": "The ARN of the event source associated with the archive."
                      }
                    ]
                  },
                  "Description": {
                    "allOf": [
                      { "type": "string", "pattern": ".*", "maxLength": 512 },
                      { "description": "A description for the archive." }
                    ]
                  },
                  "EventPattern": {
                    "allOf": [
                      { "type": "string" },
                      {
                        "description": "An event pattern to use to filter events sent to the archive."
                      }
                    ]
                  },
                  "RetentionDays": {
                    "allOf": [
                      { "type": "integer", "minimum": 0 },
                      {
                        "description": "The number of days to retain events for. Default value is 0. If set to 0, events are retained indefinitely"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.CreateArchive"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Create Archive"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DeleteArchive": {
      "post": {
        "operationId": "DeleteArchive",
        "description": "Deletes the specified archive.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ArchiveName"],
                "title": "DeleteArchiveRequest",
                "properties": {
                  "ArchiveName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 48
                      },
                      { "description": "The name of the archive to delete." }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.DeleteArchive"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Delete Archive"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DescribeArchive": {
      "post": {
        "operationId": "DescribeArchive",
        "description": "Retrieves details about an archive.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ArchiveArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:.+\\/.+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        { "description": "The ARN of the archive." }
                      ]
                    },
                    "ArchiveName": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "[\\.\\-_A-Za-z0-9]+",
                          "minLength": 1,
                          "maxLength": 48
                        },
                        { "description": "The name of the archive." }
                      ]
                    },
                    "EventSourceArn": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 1600 },
                        {
                          "description": "The ARN of the event source associated with the archive."
                        }
                      ]
                    },
                    "Description": {
                      "allOf": [
                        { "type": "string", "pattern": ".*", "maxLength": 512 },
                        { "description": "The description of the archive." }
                      ]
                    },
                    "EventPattern": {
                      "allOf": [
                        { "type": "string" },
                        {
                          "description": "The event pattern used to filter events sent to the archive."
                        }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "ENABLED",
                            "DISABLED",
                            "CREATING",
                            "UPDATING",
                            "CREATE_FAILED",
                            "UPDATE_FAILED"
                          ]
                        },
                        { "description": "The state of the archive." }
                      ]
                    },
                    "StateReason": {
                      "allOf": [
                        { "type": "string", "pattern": ".*", "maxLength": 512 },
                        {
                          "description": "The reason that the archive is in the state."
                        }
                      ]
                    },
                    "RetentionDays": {
                      "allOf": [
                        { "type": "integer", "minimum": 0 },
                        {
                          "description": "The number of days to retain events for in the archive."
                        }
                      ]
                    },
                    "SizeBytes": {
                      "allOf": [
                        { "type": "integer" },
                        { "description": "The size of the archive in bytes." }
                      ]
                    },
                    "EventCount": {
                      "allOf": [
                        { "type": "integer" },
                        {
                          "description": "The number of events in the archive."
                        }
                      ]
                    },
                    "CreationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "The time at which the archive was created."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceAlreadyExistsException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ArchiveName"],
                "title": "DescribeArchiveRequest",
                "properties": {
                  "ArchiveName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 48
                      },
                      { "description": "The name of the archive to retrieve." }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.DescribeArchive"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Describe Archive"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DescribeReplay": {
      "post": {
        "operationId": "DescribeReplay",
        "description": "Retrieves details about a replay. Use <code>DescribeReplay</code> to determine the progress of a running replay. A replay processes events to replay based on the time in the event, and replays them using 1 minute intervals. If you use <code>StartReplay</code> and specify an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers a 20 minute time range, the events are replayed from the first minute of that 20 minute range first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code> to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code> indicates the time within the specified time range associated with the last event replayed.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ReplayName": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "[\\.\\-_A-Za-z0-9]+",
                          "minLength": 1,
                          "maxLength": 64
                        },
                        { "description": "The name of the replay." }
                      ]
                    },
                    "ReplayArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:.+\\/[\\.\\-_A-Za-z0-9]+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        { "description": "The ARN of the replay." }
                      ]
                    },
                    "Description": {
                      "allOf": [
                        { "type": "string", "pattern": ".*", "maxLength": 512 },
                        { "description": "The description of the replay." }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "STARTING",
                            "RUNNING",
                            "CANCELLING",
                            "COMPLETED",
                            "CANCELLED",
                            "FAILED"
                          ]
                        },
                        { "description": "The current state of the replay." }
                      ]
                    },
                    "StateReason": {
                      "allOf": [
                        { "type": "string", "pattern": ".*", "maxLength": 512 },
                        {
                          "description": "The reason that the replay is in the current state."
                        }
                      ]
                    },
                    "EventSourceArn": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 1600 },
                        {
                          "description": "The ARN of the archive events were replayed from."
                        }
                      ]
                    },
                    "Destination": {
                      "allOf": [
                        {
                          "type": "object",
                          "required": ["Arn"],
                          "properties": {
                            "Arn": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 1600
                                },
                                {
                                  "description": "The ARN of the event bus to replay event to. You can replay events only to the event bus specified to create the archive."
                                }
                              ]
                            },
                            "FilterArns": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1600
                                  }
                                },
                                {
                                  "description": "A list of ARNs for rules to replay events to."
                                }
                              ]
                            }
                          },
                          "description": "A <code>ReplayDestination</code> object that contains details about a replay."
                        },
                        {
                          "description": "A <code>ReplayDestination</code> object that contains details about the replay."
                        }
                      ]
                    },
                    "EventStartTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "The time stamp of the first event that was last replayed from the archive."
                        }
                      ]
                    },
                    "EventEndTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "The time stamp for the last event that was replayed from the archive."
                        }
                      ]
                    },
                    "EventLastReplayedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "The time that the event was last replayed."
                        }
                      ]
                    },
                    "ReplayStartTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the replay started."
                        }
                      ]
                    },
                    "ReplayEndTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the replay stopped."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ReplayName"],
                "title": "DescribeReplayRequest",
                "properties": {
                  "ReplayName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The name of the replay to retrieve." }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.DescribeReplay"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Describe Replay"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.ListArchives": {
      "post": {
        "operationId": "ListArchives",
        "description": "Lists your archives. You can either list all the archives or you can provide a prefix to match to the archive names. Filter parameters are exclusive.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Archives": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ArchiveName": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "[\\.\\-_A-Za-z0-9]+",
                                    "minLength": 1,
                                    "maxLength": 48
                                  },
                                  { "description": "The name of the archive." }
                                ]
                              },
                              "EventSourceArn": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1600
                                  },
                                  {
                                    "description": "The ARN of the event bus associated with the archive. Only events from this event bus are sent to the archive."
                                  }
                                ]
                              },
                              "State": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "ENABLED",
                                      "DISABLED",
                                      "CREATING",
                                      "UPDATING",
                                      "CREATE_FAILED",
                                      "UPDATE_FAILED"
                                    ]
                                  },
                                  {
                                    "description": "The current state of the archive."
                                  }
                                ]
                              },
                              "StateReason": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": ".*",
                                    "maxLength": 512
                                  },
                                  {
                                    "description": "A description for the reason that the archive is in the current state."
                                  }
                                ]
                              },
                              "RetentionDays": {
                                "allOf": [
                                  { "type": "integer", "minimum": 0 },
                                  {
                                    "description": "The number of days to retain events in the archive before they are deleted."
                                  }
                                ]
                              },
                              "SizeBytes": {
                                "allOf": [
                                  { "type": "integer" },
                                  {
                                    "description": "The size of the archive, in bytes."
                                  }
                                ]
                              },
                              "EventCount": {
                                "allOf": [
                                  { "type": "integer" },
                                  {
                                    "description": "The number of events in the archive."
                                  }
                                ]
                              },
                              "CreationTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "The time stamp for the time that the archive was created."
                                  }
                                ]
                              }
                            },
                            "description": "An <code>Archive</code> object that contains details about an archive."
                          }
                        },
                        {
                          "description": "An array of <code>Archive</code> objects that include details about an archive."
                        }
                      ]
                    },
                    "NextToken": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 2048 },
                        {
                          "description": "The token returned by a previous call to retrieve the next set of results."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "ListArchivesRequest",
                "properties": {
                  "NamePrefix": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 48
                      },
                      {
                        "description": "A name prefix to filter the archives returned. Only archives with name that match the prefix are returned."
                      }
                    ]
                  },
                  "EventSourceArn": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 1600 },
                      {
                        "description": "The ARN of the event source associated with the archive."
                      }
                    ]
                  },
                  "State": {
                    "allOf": [
                      {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED",
                          "CREATING",
                          "UPDATING",
                          "CREATE_FAILED",
                          "UPDATE_FAILED"
                        ]
                      },
                      { "description": "The state of the archive." }
                    ]
                  },
                  "NextToken": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 2048 },
                      {
                        "description": "The token returned by a previous call to retrieve the next set of results."
                      }
                    ]
                  },
                  "Limit": {
                    "allOf": [
                      { "type": "integer", "minimum": 1, "maximum": 100 },
                      {
                        "description": "The maximum number of results to return."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.ListArchives"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "List Archives"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.ListReplays": {
      "post": {
        "operationId": "ListReplays",
        "description": "Lists your replays. You can either list all the replays or you can provide a prefix to match to the replay names. Filter parameters are exclusive.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Replays": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ReplayName": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "[\\.\\-_A-Za-z0-9]+",
                                    "minLength": 1,
                                    "maxLength": 64
                                  },
                                  { "description": "The name of the replay." }
                                ]
                              },
                              "EventSourceArn": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1600
                                  },
                                  {
                                    "description": "The ARN of the archive to replay event from."
                                  }
                                ]
                              },
                              "State": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "STARTING",
                                      "RUNNING",
                                      "CANCELLING",
                                      "COMPLETED",
                                      "CANCELLED",
                                      "FAILED"
                                    ]
                                  },
                                  {
                                    "description": "The current state of the replay."
                                  }
                                ]
                              },
                              "StateReason": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": ".*",
                                    "maxLength": 512
                                  },
                                  {
                                    "description": "A description of why the replay is in the current state."
                                  }
                                ]
                              },
                              "EventStartTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "A time stamp for the time to start replaying events. This is determined by the time in the event as described in <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEventsRequestEntry.html#eventbridge-Type-PutEventsRequestEntry-Time\">Time</a>."
                                  }
                                ]
                              },
                              "EventEndTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "A time stamp for the time to start replaying events. Any event with a creation time prior to the <code>EventEndTime</code> specified is replayed."
                                  }
                                ]
                              },
                              "EventLastReplayedTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "A time stamp for the time that the last event was replayed."
                                  }
                                ]
                              },
                              "ReplayStartTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "A time stamp for the time that the replay started."
                                  }
                                ]
                              },
                              "ReplayEndTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "A time stamp for the time that the replay completed."
                                  }
                                ]
                              }
                            },
                            "description": "A <code>Replay</code> object that contains details about a replay."
                          }
                        },
                        {
                          "description": "An array of <code>Replay</code> objects that contain information about the replay."
                        }
                      ]
                    },
                    "NextToken": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 2048 },
                        {
                          "description": "The token returned by a previous call to retrieve the next set of results."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "ListReplaysRequest",
                "properties": {
                  "NamePrefix": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "A name prefix to filter the archives returned. Only archives with name that match the prefix are returned."
                      }
                    ]
                  },
                  "State": {
                    "allOf": [
                      {
                        "type": "string",
                        "enum": [
                          "STARTING",
                          "RUNNING",
                          "CANCELLING",
                          "COMPLETED",
                          "CANCELLED",
                          "FAILED"
                        ]
                      },
                      { "description": "The state of the replay." }
                    ]
                  },
                  "EventSourceArn": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 1600 },
                      {
                        "description": "The ARN of the event source associated with the replay."
                      }
                    ]
                  },
                  "NextToken": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 2048 },
                      {
                        "description": "The token returned by a previous call to retrieve the next set of results."
                      }
                    ]
                  },
                  "Limit": {
                    "allOf": [
                      { "type": "integer", "minimum": 1, "maximum": 100 },
                      {
                        "description": "The maximum number of replays to retrieve."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.ListReplays"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "List Replays"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.StartReplay": {
      "post": {
        "operationId": "StartReplay",
        "description": "Starts the specified replay. Events are not necessarily replayed in the exact same order that they were added to the archive. A replay processes events to replay based on the time in the event, and replays them using 1 minute intervals. If you specify an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers a 20 minute time range, the events are replayed from the first minute of that 20 minute range first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code> to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code> indicates the time within the specified time range associated with the last event replayed.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ReplayArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:.+\\/[\\.\\-_A-Za-z0-9]+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        { "description": "The ARN of the replay." }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "STARTING",
                            "RUNNING",
                            "CANCELLING",
                            "COMPLETED",
                            "CANCELLED",
                            "FAILED"
                          ]
                        },
                        { "description": "The state of the replay." }
                      ]
                    },
                    "StateReason": {
                      "allOf": [
                        { "type": "string", "pattern": ".*", "maxLength": 512 },
                        {
                          "description": "The reason that the replay is in the state."
                        }
                      ]
                    },
                    "ReplayStartTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "The time at which the replay started."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceAlreadyExistsException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InvalidEventPatternException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": {} } }
          },
          "484": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ReplayName",
                  "EventSourceArn",
                  "EventStartTime",
                  "EventEndTime",
                  "Destination"
                ],
                "title": "StartReplayRequest",
                "properties": {
                  "ReplayName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The name of the replay to start." }
                    ]
                  },
                  "Description": {
                    "allOf": [
                      { "type": "string", "pattern": ".*", "maxLength": 512 },
                      {
                        "description": "A description for the replay to start."
                      }
                    ]
                  },
                  "EventSourceArn": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 1600 },
                      {
                        "description": "The ARN of the archive to replay events from."
                      }
                    ]
                  },
                  "EventStartTime": {
                    "allOf": [
                      { "type": "string", "format": "date-time" },
                      {
                        "description": "A time stamp for the time to start replaying events. Only events that occurred between the <code>EventStartTime</code> and <code>EventEndTime</code> are replayed."
                      }
                    ]
                  },
                  "EventEndTime": {
                    "allOf": [
                      { "type": "string", "format": "date-time" },
                      {
                        "description": "A time stamp for the time to stop replaying events. Only events that occurred between the <code>EventStartTime</code> and <code>EventEndTime</code> are replayed."
                      }
                    ]
                  },
                  "Destination": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": ["Arn"],
                        "properties": {
                          "Arn": {
                            "allOf": [
                              {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1600
                              },
                              {
                                "description": "The ARN of the event bus to replay event to. You can replay events only to the event bus specified to create the archive."
                              }
                            ]
                          },
                          "FilterArns": {
                            "allOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 1600
                                }
                              },
                              {
                                "description": "A list of ARNs for rules to replay events to."
                              }
                            ]
                          }
                        },
                        "description": "A <code>ReplayDestination</code> object that contains details about a replay."
                      },
                      {
                        "description": "A <code>ReplayDestination</code> object that includes details about the destination for the replay."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.StartReplay"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Start Replay"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.UpdateArchive": {
      "post": {
        "operationId": "UpdateArchive",
        "description": "Updates the specified archive.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ArchiveArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:.+\\/.+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        { "description": "The ARN of the archive." }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "ENABLED",
                            "DISABLED",
                            "CREATING",
                            "UPDATING",
                            "CREATE_FAILED",
                            "UPDATE_FAILED"
                          ]
                        },
                        { "description": "The state of the archive." }
                      ]
                    },
                    "StateReason": {
                      "allOf": [
                        { "type": "string", "pattern": ".*", "maxLength": 512 },
                        {
                          "description": "The reason that the archive is in the current state."
                        }
                      ]
                    },
                    "CreationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "The time at which the archive was updated."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": {} } }
          },
          "484": {
            "description": "InvalidEventPatternException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ArchiveName"],
                "title": "UpdateArchiveRequest",
                "properties": {
                  "ArchiveName": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 48
                      },
                      { "description": "The name of the archive to update." }
                    ]
                  },
                  "Description": {
                    "allOf": [
                      { "type": "string", "pattern": ".*", "maxLength": 512 },
                      { "description": "The description for the archive." }
                    ]
                  },
                  "EventPattern": {
                    "allOf": [
                      { "type": "string" },
                      {
                        "description": "The event pattern to use to filter events sent to the archive."
                      }
                    ]
                  },
                  "RetentionDays": {
                    "allOf": [
                      { "type": "integer", "minimum": 0 },
                      {
                        "description": "The number of days to retain events in the archive."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSEvents.UpdateArchive"] }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Update Archive"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.CreateApiDestination": {
      "post": {
        "operationId": "CreateApiDestination",
        "description": "Creates an API destination, which is an HTTP invocation endpoint configured as a target for events.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ApiDestinationArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:api-destination\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        {
                          "description": "The ARN of the API destination that was created by the request."
                        }
                      ]
                    },
                    "ApiDestinationState": {
                      "allOf": [
                        { "type": "string", "enum": ["ACTIVE", "INACTIVE"] },
                        {
                          "description": "The state of the API destination that was created by the request."
                        }
                      ]
                    },
                    "CreationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp indicating the time that the API destination was created."
                        }
                      ]
                    },
                    "LastModifiedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp indicating the time that the API destination was last modified."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceAlreadyExistsException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "Name",
                  "ConnectionArn",
                  "InvocationEndpoint",
                  "HttpMethod"
                ],
                "title": "CreateApiDestinationRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "The name for the API destination to create."
                      }
                    ]
                  },
                  "Description": {
                    "allOf": [
                      { "type": "string", "pattern": ".*", "maxLength": 512 },
                      {
                        "description": "A description for the API destination to create."
                      }
                    ]
                  },
                  "ConnectionArn": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                        "minLength": 1,
                        "maxLength": 1600
                      },
                      {
                        "description": "The ARN of the connection to use for the API destination. The destination endpoint must support the authorization type specified for the connection."
                      }
                    ]
                  },
                  "InvocationEndpoint": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$",
                        "minLength": 1,
                        "maxLength": 2048
                      },
                      {
                        "description": "The URL to the HTTP invocation endpoint for the API destination."
                      }
                    ]
                  },
                  "HttpMethod": {
                    "allOf": [
                      {
                        "type": "string",
                        "enum": [
                          "POST",
                          "GET",
                          "HEAD",
                          "OPTIONS",
                          "PUT",
                          "PATCH",
                          "DELETE"
                        ]
                      },
                      {
                        "description": "The method to use for the request to the HTTP invocation endpoint."
                      }
                    ]
                  },
                  "InvocationRateLimitPerSecond": {
                    "allOf": [
                      { "type": "integer", "minimum": 1 },
                      {
                        "description": "The maximum number of requests per second to send to the HTTP invocation endpoint."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.CreateApiDestination"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Create Api Destination"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.CreateConnection": {
      "post": {
        "operationId": "CreateConnection",
        "description": "Creates a connection. A connection defines the authorization type and credentials to use for authorization with an API destination HTTP endpoint.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConnectionArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        {
                          "description": "The ARN of the connection that was created by the request."
                        }
                      ]
                    },
                    "ConnectionState": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "UPDATING",
                            "DELETING",
                            "AUTHORIZED",
                            "DEAUTHORIZED",
                            "AUTHORIZING",
                            "DEAUTHORIZING"
                          ]
                        },
                        {
                          "description": "The state of the connection that was created by the request."
                        }
                      ]
                    },
                    "CreationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was created."
                        }
                      ]
                    },
                    "LastModifiedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was last updated."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceAlreadyExistsException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name", "AuthorizationType", "AuthParameters"],
                "title": "CreateConnectionRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "The name for the connection to create."
                      }
                    ]
                  },
                  "Description": {
                    "allOf": [
                      { "type": "string", "pattern": ".*", "maxLength": 512 },
                      {
                        "description": "A description for the connection to create."
                      }
                    ]
                  },
                  "AuthorizationType": {
                    "allOf": [
                      {
                        "type": "string",
                        "enum": ["BASIC", "OAUTH_CLIENT_CREDENTIALS", "API_KEY"]
                      },
                      {
                        "description": "The type of authorization to use for the connection."
                      }
                    ]
                  },
                  "AuthParameters": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "BasicAuthParameters": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": ["Username", "Password"],
                                "properties": {
                                  "Username": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                        "minLength": 1,
                                        "maxLength": 512
                                      },
                                      {
                                        "description": "The user name to use for Basic authorization."
                                      }
                                    ]
                                  },
                                  "Password": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                        "minLength": 1,
                                        "maxLength": 512
                                      },
                                      {
                                        "description": "The password associated with the user name to use for Basic authorization."
                                      }
                                    ]
                                  }
                                },
                                "description": "Contains the Basic authorization parameters to use for the connection."
                              },
                              {
                                "description": "A <code>CreateConnectionBasicAuthRequestParameters</code> object that contains the Basic authorization parameters to use for the connection."
                              }
                            ]
                          },
                          "OAuthParameters": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "ClientParameters",
                                  "AuthorizationEndpoint",
                                  "HttpMethod"
                                ],
                                "properties": {
                                  "ClientParameters": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ClientID",
                                          "ClientSecret"
                                        ],
                                        "properties": {
                                          "ClientID": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                                "minLength": 1,
                                                "maxLength": 512
                                              },
                                              {
                                                "description": "The client ID to use for OAuth authorization for the connection."
                                              }
                                            ]
                                          },
                                          "ClientSecret": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                                "minLength": 1,
                                                "maxLength": 512
                                              },
                                              {
                                                "description": "The client secret associated with the client ID to use for OAuth authorization for the connection."
                                              }
                                            ]
                                          }
                                        },
                                        "description": "Contains the Basic authorization parameters to use for the connection."
                                      },
                                      {
                                        "description": "A <code>CreateConnectionOAuthClientRequestParameters</code> object that contains the client parameters for OAuth authorization."
                                      }
                                    ]
                                  },
                                  "AuthorizationEndpoint": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$",
                                        "minLength": 1,
                                        "maxLength": 2048
                                      },
                                      {
                                        "description": "The URL to the authorization endpoint when OAuth is specified as the authorization type."
                                      }
                                    ]
                                  },
                                  "HttpMethod": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "enum": ["GET", "POST", "PUT"]
                                      },
                                      {
                                        "description": "The method to use for the authorization request."
                                      }
                                    ]
                                  },
                                  "OAuthHttpParameters": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "HeaderParameters": {
                                            "allOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "Key": {
                                                      "allOf": [
                                                        {
                                                          "type": "string",
                                                          "pattern": "^[!#$%&'*+-.^_`|~0-9a-zA-Z]+$",
                                                          "maxLength": 512
                                                        },
                                                        {
                                                          "description": "The key for the parameter."
                                                        }
                                                      ]
                                                    },
                                                    "Value": {
                                                      "allOf": [
                                                        {
                                                          "type": "string",
                                                          "pattern": "^[ \\t]*[\\x20-\\x7E]+([ \\t]+[\\x20-\\x7E]+)*[ \\t]*$",
                                                          "maxLength": 512
                                                        },
                                                        {
                                                          "description": "The value associated with the key."
                                                        }
                                                      ]
                                                    },
                                                    "IsValueSecret": {
                                                      "allOf": [
                                                        { "type": "boolean" },
                                                        {
                                                          "description": "Specified whether the value is a secret."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "description": "Additional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB."
                                                },
                                                "minItems": 0,
                                                "maxItems": 100
                                              },
                                              {
                                                "description": "Contains additional header parameters for the connection."
                                              }
                                            ]
                                          },
                                          "QueryStringParameters": {
                                            "allOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "Key": {
                                                      "allOf": [
                                                        {
                                                          "type": "string",
                                                          "pattern": "[^\\x00-\\x1F\\x7F]+",
                                                          "maxLength": 512
                                                        },
                                                        {
                                                          "description": "The key for a query string parameter."
                                                        }
                                                      ]
                                                    },
                                                    "Value": {
                                                      "allOf": [
                                                        {
                                                          "type": "string",
                                                          "pattern": "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F]+",
                                                          "maxLength": 512
                                                        },
                                                        {
                                                          "description": "The value associated with the key for the query string parameter."
                                                        }
                                                      ]
                                                    },
                                                    "IsValueSecret": {
                                                      "allOf": [
                                                        { "type": "boolean" },
                                                        {
                                                          "description": "Specifies whether the value is secret."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "description": "Additional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB."
                                                },
                                                "minItems": 0,
                                                "maxItems": 100
                                              },
                                              {
                                                "description": "Contains additional query string parameters for the connection."
                                              }
                                            ]
                                          },
                                          "BodyParameters": {
                                            "allOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "Key": {
                                                      "allOf": [
                                                        { "type": "string" },
                                                        {
                                                          "description": "The key for the parameter."
                                                        }
                                                      ]
                                                    },
                                                    "Value": {
                                                      "allOf": [
                                                        { "type": "string" },
                                                        {
                                                          "description": "The value associated with the key."
                                                        }
                                                      ]
                                                    },
                                                    "IsValueSecret": {
                                                      "allOf": [
                                                        { "type": "boolean" },
                                                        {
                                                          "description": "Specified whether the value is secret."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "description": "Additional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB."
                                                },
                                                "minItems": 0,
                                                "maxItems": 100
                                              },
                                              {
                                                "description": "Contains additional body string parameters for the connection."
                                              }
                                            ]
                                          }
                                        },
                                        "description": "Contains additional parameters for the connection."
                                      },
                                      {
                                        "description": "A <code>ConnectionHttpParameters</code> object that contains details about the additional parameters to use for the connection."
                                      }
                                    ]
                                  }
                                },
                                "description": "Contains the OAuth authorization parameters to use for the connection."
                              },
                              {
                                "description": "A <code>CreateConnectionOAuthRequestParameters</code> object that contains the OAuth authorization parameters to use for the connection."
                              }
                            ]
                          },
                          "ApiKeyAuthParameters": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": ["ApiKeyName", "ApiKeyValue"],
                                "properties": {
                                  "ApiKeyName": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                        "minLength": 1,
                                        "maxLength": 512
                                      },
                                      {
                                        "description": "The name of the API key to use for authorization."
                                      }
                                    ]
                                  },
                                  "ApiKeyValue": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                        "minLength": 1,
                                        "maxLength": 512
                                      },
                                      {
                                        "description": "The value for the API key to use for authorization."
                                      }
                                    ]
                                  }
                                },
                                "description": "Contains the API key authorization parameters for the connection."
                              },
                              {
                                "description": "A <code>CreateConnectionApiKeyAuthRequestParameters</code> object that contains the API key authorization parameters to use for the connection."
                              }
                            ]
                          },
                          "InvocationHttpParameters": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "HeaderParameters": {
                                    "allOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Key": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "pattern": "^[!#$%&'*+-.^_`|~0-9a-zA-Z]+$",
                                                  "maxLength": 512
                                                },
                                                {
                                                  "description": "The key for the parameter."
                                                }
                                              ]
                                            },
                                            "Value": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "pattern": "^[ \\t]*[\\x20-\\x7E]+([ \\t]+[\\x20-\\x7E]+)*[ \\t]*$",
                                                  "maxLength": 512
                                                },
                                                {
                                                  "description": "The value associated with the key."
                                                }
                                              ]
                                            },
                                            "IsValueSecret": {
                                              "allOf": [
                                                { "type": "boolean" },
                                                {
                                                  "description": "Specified whether the value is a secret."
                                                }
                                              ]
                                            }
                                          },
                                          "description": "Additional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB."
                                        },
                                        "minItems": 0,
                                        "maxItems": 100
                                      },
                                      {
                                        "description": "Contains additional header parameters for the connection."
                                      }
                                    ]
                                  },
                                  "QueryStringParameters": {
                                    "allOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Key": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "pattern": "[^\\x00-\\x1F\\x7F]+",
                                                  "maxLength": 512
                                                },
                                                {
                                                  "description": "The key for a query string parameter."
                                                }
                                              ]
                                            },
                                            "Value": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "pattern": "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F]+",
                                                  "maxLength": 512
                                                },
                                                {
                                                  "description": "The value associated with the key for the query string parameter."
                                                }
                                              ]
                                            },
                                            "IsValueSecret": {
                                              "allOf": [
                                                { "type": "boolean" },
                                                {
                                                  "description": "Specifies whether the value is secret."
                                                }
                                              ]
                                            }
                                          },
                                          "description": "Additional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB."
                                        },
                                        "minItems": 0,
                                        "maxItems": 100
                                      },
                                      {
                                        "description": "Contains additional query string parameters for the connection."
                                      }
                                    ]
                                  },
                                  "BodyParameters": {
                                    "allOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Key": {
                                              "allOf": [
                                                { "type": "string" },
                                                {
                                                  "description": "The key for the parameter."
                                                }
                                              ]
                                            },
                                            "Value": {
                                              "allOf": [
                                                { "type": "string" },
                                                {
                                                  "description": "The value associated with the key."
                                                }
                                              ]
                                            },
                                            "IsValueSecret": {
                                              "allOf": [
                                                { "type": "boolean" },
                                                {
                                                  "description": "Specified whether the value is secret."
                                                }
                                              ]
                                            }
                                          },
                                          "description": "Additional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB."
                                        },
                                        "minItems": 0,
                                        "maxItems": 100
                                      },
                                      {
                                        "description": "Contains additional body string parameters for the connection."
                                      }
                                    ]
                                  }
                                },
                                "description": "Contains additional parameters for the connection."
                              },
                              {
                                "description": "A <code>ConnectionHttpParameters</code> object that contains the API key authorization parameters to use for the connection. Note that if you include additional parameters for the target of a rule via <code>HttpParameters</code>, including query strings, the parameters added for the connection take precedence."
                              }
                            ]
                          }
                        },
                        "description": "Contains the authorization parameters for the connection."
                      },
                      {
                        "description": "A <code>CreateConnectionAuthRequestParameters</code> object that contains the authorization parameters to use to authorize with the endpoint. "
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.CreateConnection"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Create Connection"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DeauthorizeConnection": {
      "post": {
        "operationId": "DeauthorizeConnection",
        "description": "Removes all authorization parameters from the connection. This lets you remove the secret from the connection so you can reuse it without having to create a new connection.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConnectionArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        {
                          "description": "The ARN of the connection that authorization was removed from."
                        }
                      ]
                    },
                    "ConnectionState": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "UPDATING",
                            "DELETING",
                            "AUTHORIZED",
                            "DEAUTHORIZED",
                            "AUTHORIZING",
                            "DEAUTHORIZING"
                          ]
                        },
                        { "description": "The state of the connection." }
                      ]
                    },
                    "CreationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was created."
                        }
                      ]
                    },
                    "LastModifiedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was last updated."
                        }
                      ]
                    },
                    "LastAuthorizedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was last authorized."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "DeauthorizeConnectionRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "The name of the connection to remove authorization from."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.DeauthorizeConnection"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Deauthorize Connection"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DeleteApiDestination": {
      "post": {
        "operationId": "DeleteApiDestination",
        "description": "Deletes the specified API destination.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "DeleteApiDestinationRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "The name of the destination to delete."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.DeleteApiDestination"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Delete Api Destination"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DeleteConnection": {
      "post": {
        "operationId": "DeleteConnection",
        "description": "Deletes a connection.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConnectionArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        {
                          "description": "The ARN of the connection that was deleted."
                        }
                      ]
                    },
                    "ConnectionState": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "UPDATING",
                            "DELETING",
                            "AUTHORIZED",
                            "DEAUTHORIZED",
                            "AUTHORIZING",
                            "DEAUTHORIZING"
                          ]
                        },
                        {
                          "description": "The state of the connection before it was deleted."
                        }
                      ]
                    },
                    "CreationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was created."
                        }
                      ]
                    },
                    "LastModifiedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was last modified before it was deleted."
                        }
                      ]
                    },
                    "LastAuthorizedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was last authorized before it wa deleted."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "DeleteConnectionRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The name of the connection to delete." }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.DeleteConnection"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Delete Connection"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DescribeApiDestination": {
      "post": {
        "operationId": "DescribeApiDestination",
        "description": "Retrieves details about an API destination.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ApiDestinationArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:api-destination\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        {
                          "description": "The ARN of the API destination retrieved."
                        }
                      ]
                    },
                    "Name": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "[\\.\\-_A-Za-z0-9]+",
                          "minLength": 1,
                          "maxLength": 64
                        },
                        {
                          "description": "The name of the API destination retrieved."
                        }
                      ]
                    },
                    "Description": {
                      "allOf": [
                        { "type": "string", "pattern": ".*", "maxLength": 512 },
                        {
                          "description": "The description for the API destination retrieved."
                        }
                      ]
                    },
                    "ApiDestinationState": {
                      "allOf": [
                        { "type": "string", "enum": ["ACTIVE", "INACTIVE"] },
                        {
                          "description": "The state of the API destination retrieved."
                        }
                      ]
                    },
                    "ConnectionArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        {
                          "description": "The ARN of the connection specified for the API destination retrieved."
                        }
                      ]
                    },
                    "InvocationEndpoint": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$",
                          "minLength": 1,
                          "maxLength": 2048
                        },
                        {
                          "description": "The URL to use to connect to the HTTP endpoint."
                        }
                      ]
                    },
                    "HttpMethod": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "POST",
                            "GET",
                            "HEAD",
                            "OPTIONS",
                            "PUT",
                            "PATCH",
                            "DELETE"
                          ]
                        },
                        {
                          "description": "The method to use to connect to the HTTP endpoint."
                        }
                      ]
                    },
                    "InvocationRateLimitPerSecond": {
                      "allOf": [
                        { "type": "integer", "minimum": 1 },
                        {
                          "description": "The maximum number of invocations per second to specified for the API destination. Note that if you set the invocation rate maximum to a value lower the rate necessary to send all events received on to the destination HTTP endpoint, some events may not be delivered within the 24-hour retry window. If you plan to set the rate lower than the rate necessary to deliver all events, consider using a dead-letter queue to catch events that are not delivered within 24 hours."
                        }
                      ]
                    },
                    "CreationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the API destination was created."
                        }
                      ]
                    },
                    "LastModifiedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the API destination was last modified."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "DescribeApiDestinationRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "The name of the API destination to retrieve."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.DescribeApiDestination"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Describe Api Destination"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.DescribeConnection": {
      "post": {
        "operationId": "DescribeConnection",
        "description": "Retrieves details about a connection.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConnectionArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        {
                          "description": "The ARN of the connection retrieved."
                        }
                      ]
                    },
                    "Name": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "[\\.\\-_A-Za-z0-9]+",
                          "minLength": 1,
                          "maxLength": 64
                        },
                        {
                          "description": "The name of the connection retrieved."
                        }
                      ]
                    },
                    "Description": {
                      "allOf": [
                        { "type": "string", "pattern": ".*", "maxLength": 512 },
                        {
                          "description": "The description for the connection retrieved."
                        }
                      ]
                    },
                    "ConnectionState": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "UPDATING",
                            "DELETING",
                            "AUTHORIZED",
                            "DEAUTHORIZED",
                            "AUTHORIZING",
                            "DEAUTHORIZING"
                          ]
                        },
                        {
                          "description": "The state of the connection retrieved."
                        }
                      ]
                    },
                    "StateReason": {
                      "allOf": [
                        { "type": "string", "pattern": ".*", "maxLength": 512 },
                        {
                          "description": "The reason that the connection is in the current connection state."
                        }
                      ]
                    },
                    "AuthorizationType": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "BASIC",
                            "OAUTH_CLIENT_CREDENTIALS",
                            "API_KEY"
                          ]
                        },
                        {
                          "description": "The type of authorization specified for the connection."
                        }
                      ]
                    },
                    "SecretArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:secretsmanager:([a-z]|\\d|\\-)*:([0-9]{12})?:secret:[\\/_+=\\.@\\-A-Za-z0-9]+$",
                          "minLength": 20,
                          "maxLength": 2048
                        },
                        {
                          "description": "The ARN of the secret created from the authorization parameters specified for the connection."
                        }
                      ]
                    },
                    "AuthParameters": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "BasicAuthParameters": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Username": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                          "minLength": 1,
                                          "maxLength": 512
                                        },
                                        {
                                          "description": "The user name to use for Basic authorization."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "Contains the authorization parameters for the connection if Basic is specified as the authorization type."
                                },
                                {
                                  "description": "The authorization parameters for Basic authorization."
                                }
                              ]
                            },
                            "OAuthParameters": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "ClientParameters": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "ClientID": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                                  "minLength": 1,
                                                  "maxLength": 512
                                                },
                                                {
                                                  "description": "The client ID associated with the response to the connection request."
                                                }
                                              ]
                                            }
                                          },
                                          "description": "Contains the client response parameters for the connection when OAuth is specified as the authorization type."
                                        },
                                        {
                                          "description": "A <code>ConnectionOAuthClientResponseParameters</code> object that contains details about the client parameters returned when OAuth is specified as the authorization type."
                                        }
                                      ]
                                    },
                                    "AuthorizationEndpoint": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "pattern": "^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$",
                                          "minLength": 1,
                                          "maxLength": 2048
                                        },
                                        {
                                          "description": "The URL to the HTTP endpoint that authorized the request."
                                        }
                                      ]
                                    },
                                    "HttpMethod": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "enum": ["GET", "POST", "PUT"]
                                        },
                                        {
                                          "description": "The method used to connect to the HTTP endpoint."
                                        }
                                      ]
                                    },
                                    "OAuthHttpParameters": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "HeaderParameters": {
                                              "allOf": [
                                                {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "Key": {
                                                        "allOf": [
                                                          {
                                                            "type": "string",
                                                            "pattern": "^[!#$%&'*+-.^_`|~0-9a-zA-Z]+$",
                                                            "maxLength": 512
                                                          },
                                                          {
                                                            "description": "The key for the parameter."
                                                          }
                                                        ]
                                                      },
                                                      "Value": {
                                                        "allOf": [
                                                          {
                                                            "type": "string",
                                                            "pattern": "^[ \\t]*[\\x20-\\x7E]+([ \\t]+[\\x20-\\x7E]+)*[ \\t]*$",
                                                            "maxLength": 512
                                                          },
                                                          {
                                                            "description": "The value associated with the key."
                                                          }
                                                        ]
                                                      },
                                                      "IsValueSecret": {
                                                        "allOf": [
                                                          { "type": "boolean" },
                                                          {
                                                            "description": "Specified whether the value is a secret."
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "description": "Additional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB."
                                                  },
                                                  "minItems": 0,
                                                  "maxItems": 100
                                                },
                                                {
                                                  "description": "Contains additional header parameters for the connection."
                                                }
                                              ]
                                            },
                                            "QueryStringParameters": {
                                              "allOf": [
                                                {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "Key": {
                                                        "allOf": [
                                                          {
                                                            "type": "string",
                                                            "pattern": "[^\\x00-\\x1F\\x7F]+",
                                                            "maxLength": 512
                                                          },
                                                          {
                                                            "description": "The key for a query string parameter."
                                                          }
                                                        ]
                                                      },
                                                      "Value": {
                                                        "allOf": [
                                                          {
                                                            "type": "string",
                                                            "pattern": "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F]+",
                                                            "maxLength": 512
                                                          },
                                                          {
                                                            "description": "The value associated with the key for the query string parameter."
                                                          }
                                                        ]
                                                      },
                                                      "IsValueSecret": {
                                                        "allOf": [
                                                          { "type": "boolean" },
                                                          {
                                                            "description": "Specifies whether the value is secret."
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "description": "Additional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB."
                                                  },
                                                  "minItems": 0,
                                                  "maxItems": 100
                                                },
                                                {
                                                  "description": "Contains additional query string parameters for the connection."
                                                }
                                              ]
                                            },
                                            "BodyParameters": {
                                              "allOf": [
                                                {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "Key": {
                                                        "allOf": [
                                                          { "type": "string" },
                                                          {
                                                            "description": "The key for the parameter."
                                                          }
                                                        ]
                                                      },
                                                      "Value": {
                                                        "allOf": [
                                                          { "type": "string" },
                                                          {
                                                            "description": "The value associated with the key."
                                                          }
                                                        ]
                                                      },
                                                      "IsValueSecret": {
                                                        "allOf": [
                                                          { "type": "boolean" },
                                                          {
                                                            "description": "Specified whether the value is secret."
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "description": "Additional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB."
                                                  },
                                                  "minItems": 0,
                                                  "maxItems": 100
                                                },
                                                {
                                                  "description": "Contains additional body string parameters for the connection."
                                                }
                                              ]
                                            }
                                          },
                                          "description": "Contains additional parameters for the connection."
                                        },
                                        {
                                          "description": "The additional HTTP parameters used for the OAuth authorization request."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "Contains the response parameters when OAuth is specified as the authorization type."
                                },
                                {
                                  "description": "The OAuth parameters to use for authorization."
                                }
                              ]
                            },
                            "ApiKeyAuthParameters": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "ApiKeyName": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                          "minLength": 1,
                                          "maxLength": 512
                                        },
                                        {
                                          "description": "The name of the header to use for the <code>APIKeyValue</code> used for authorization."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "Contains the authorization parameters for the connection if API Key is specified as the authorization type."
                                },
                                {
                                  "description": "The API Key parameters to use for authorization."
                                }
                              ]
                            },
                            "InvocationHttpParameters": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "HeaderParameters": {
                                      "allOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "Key": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "pattern": "^[!#$%&'*+-.^_`|~0-9a-zA-Z]+$",
                                                    "maxLength": 512
                                                  },
                                                  {
                                                    "description": "The key for the parameter."
                                                  }
                                                ]
                                              },
                                              "Value": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "pattern": "^[ \\t]*[\\x20-\\x7E]+([ \\t]+[\\x20-\\x7E]+)*[ \\t]*$",
                                                    "maxLength": 512
                                                  },
                                                  {
                                                    "description": "The value associated with the key."
                                                  }
                                                ]
                                              },
                                              "IsValueSecret": {
                                                "allOf": [
                                                  { "type": "boolean" },
                                                  {
                                                    "description": "Specified whether the value is a secret."
                                                  }
                                                ]
                                              }
                                            },
                                            "description": "Additional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB."
                                          },
                                          "minItems": 0,
                                          "maxItems": 100
                                        },
                                        {
                                          "description": "Contains additional header parameters for the connection."
                                        }
                                      ]
                                    },
                                    "QueryStringParameters": {
                                      "allOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "Key": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "pattern": "[^\\x00-\\x1F\\x7F]+",
                                                    "maxLength": 512
                                                  },
                                                  {
                                                    "description": "The key for a query string parameter."
                                                  }
                                                ]
                                              },
                                              "Value": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "pattern": "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F]+",
                                                    "maxLength": 512
                                                  },
                                                  {
                                                    "description": "The value associated with the key for the query string parameter."
                                                  }
                                                ]
                                              },
                                              "IsValueSecret": {
                                                "allOf": [
                                                  { "type": "boolean" },
                                                  {
                                                    "description": "Specifies whether the value is secret."
                                                  }
                                                ]
                                              }
                                            },
                                            "description": "Additional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB."
                                          },
                                          "minItems": 0,
                                          "maxItems": 100
                                        },
                                        {
                                          "description": "Contains additional query string parameters for the connection."
                                        }
                                      ]
                                    },
                                    "BodyParameters": {
                                      "allOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "Key": {
                                                "allOf": [
                                                  { "type": "string" },
                                                  {
                                                    "description": "The key for the parameter."
                                                  }
                                                ]
                                              },
                                              "Value": {
                                                "allOf": [
                                                  { "type": "string" },
                                                  {
                                                    "description": "The value associated with the key."
                                                  }
                                                ]
                                              },
                                              "IsValueSecret": {
                                                "allOf": [
                                                  { "type": "boolean" },
                                                  {
                                                    "description": "Specified whether the value is secret."
                                                  }
                                                ]
                                              }
                                            },
                                            "description": "Additional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB."
                                          },
                                          "minItems": 0,
                                          "maxItems": 100
                                        },
                                        {
                                          "description": "Contains additional body string parameters for the connection."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "Contains additional parameters for the connection."
                                },
                                {
                                  "description": "Additional parameters for the connection that are passed through with every invocation to the HTTP endpoint."
                                }
                              ]
                            }
                          },
                          "description": "Contains the authorization parameters to use for the connection."
                        },
                        {
                          "description": "The parameters to use for authorization for the connection."
                        }
                      ]
                    },
                    "CreationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was created."
                        }
                      ]
                    },
                    "LastModifiedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was last modified."
                        }
                      ]
                    },
                    "LastAuthorizedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was last authorized."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "DescribeConnectionRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "The name of the connection to retrieve."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.DescribeConnection"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Describe Connection"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.ListApiDestinations": {
      "post": {
        "operationId": "ListApiDestinations",
        "description": "Retrieves a list of API destination in the account in the current Region.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ApiDestinations": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ApiDestinationArn": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:api-destination\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                                    "minLength": 1,
                                    "maxLength": 1600
                                  },
                                  {
                                    "description": "The ARN of the API destination."
                                  }
                                ]
                              },
                              "Name": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "[\\.\\-_A-Za-z0-9]+",
                                    "minLength": 1,
                                    "maxLength": 64
                                  },
                                  {
                                    "description": "The name of the API destination."
                                  }
                                ]
                              },
                              "ApiDestinationState": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": ["ACTIVE", "INACTIVE"]
                                  },
                                  {
                                    "description": "The state of the API destination."
                                  }
                                ]
                              },
                              "ConnectionArn": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                                    "minLength": 1,
                                    "maxLength": 1600
                                  },
                                  {
                                    "description": "The ARN of the connection specified for the API destination."
                                  }
                                ]
                              },
                              "InvocationEndpoint": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$",
                                    "minLength": 1,
                                    "maxLength": 2048
                                  },
                                  {
                                    "description": "The URL to the endpoint for the API destination."
                                  }
                                ]
                              },
                              "HttpMethod": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "POST",
                                      "GET",
                                      "HEAD",
                                      "OPTIONS",
                                      "PUT",
                                      "PATCH",
                                      "DELETE"
                                    ]
                                  },
                                  {
                                    "description": "The method to use to connect to the HTTP endpoint."
                                  }
                                ]
                              },
                              "InvocationRateLimitPerSecond": {
                                "allOf": [
                                  { "type": "integer", "minimum": 1 },
                                  {
                                    "description": "The maximum number of invocations per second to send to the HTTP endpoint."
                                  }
                                ]
                              },
                              "CreationTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "A time stamp for the time that the API destination was created."
                                  }
                                ]
                              },
                              "LastModifiedTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "A time stamp for the time that the API destination was last modified."
                                  }
                                ]
                              }
                            },
                            "description": "Contains details about an API destination."
                          }
                        },
                        {
                          "description": "An array of <code>ApiDestination</code> objects that include information about an API destination."
                        }
                      ]
                    },
                    "NextToken": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 2048 },
                        {
                          "description": "A token you can use in a subsequent request to retrieve the next set of results."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "ListApiDestinationsRequest",
                "properties": {
                  "NamePrefix": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "A name prefix to filter results returned. Only API destinations with a name that starts with the prefix are returned."
                      }
                    ]
                  },
                  "ConnectionArn": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                        "minLength": 1,
                        "maxLength": 1600
                      },
                      {
                        "description": "The ARN of the connection specified for the API destination."
                      }
                    ]
                  },
                  "NextToken": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 2048 },
                      {
                        "description": "The token returned by a previous call to retrieve the next set of results."
                      }
                    ]
                  },
                  "Limit": {
                    "allOf": [
                      { "type": "integer", "minimum": 1, "maximum": 100 },
                      {
                        "description": "The maximum number of API destinations to include in the response."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.ListApiDestinations"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "List Api Destinations"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.ListConnections": {
      "post": {
        "operationId": "ListConnections",
        "description": "Retrieves a list of connections from the account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Connections": {
                      "allOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ConnectionArn": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                                    "minLength": 1,
                                    "maxLength": 1600
                                  },
                                  {
                                    "description": "The ARN of the connection."
                                  }
                                ]
                              },
                              "Name": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": "[\\.\\-_A-Za-z0-9]+",
                                    "minLength": 1,
                                    "maxLength": 64
                                  },
                                  {
                                    "description": "The name of the connection."
                                  }
                                ]
                              },
                              "ConnectionState": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "CREATING",
                                      "UPDATING",
                                      "DELETING",
                                      "AUTHORIZED",
                                      "DEAUTHORIZED",
                                      "AUTHORIZING",
                                      "DEAUTHORIZING"
                                    ]
                                  },
                                  {
                                    "description": "The state of the connection."
                                  }
                                ]
                              },
                              "StateReason": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "pattern": ".*",
                                    "maxLength": 512
                                  },
                                  {
                                    "description": "The reason that the connection is in the connection state."
                                  }
                                ]
                              },
                              "AuthorizationType": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "BASIC",
                                      "OAUTH_CLIENT_CREDENTIALS",
                                      "API_KEY"
                                    ]
                                  },
                                  {
                                    "description": "The authorization type specified for the connection."
                                  }
                                ]
                              },
                              "CreationTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "A time stamp for the time that the connection was created."
                                  }
                                ]
                              },
                              "LastModifiedTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "A time stamp for the time that the connection was last modified."
                                  }
                                ]
                              },
                              "LastAuthorizedTime": {
                                "allOf": [
                                  { "type": "string", "format": "date-time" },
                                  {
                                    "description": "A time stamp for the time that the connection was last authorized."
                                  }
                                ]
                              }
                            },
                            "description": "Contains information about a connection."
                          }
                        },
                        {
                          "description": "An array of connections objects that include details about the connections."
                        }
                      ]
                    },
                    "NextToken": {
                      "allOf": [
                        { "type": "string", "minLength": 1, "maxLength": 2048 },
                        {
                          "description": "A token you can use in a subsequent request to retrieve the next set of results."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "ListConnectionsRequest",
                "properties": {
                  "NamePrefix": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "A name prefix to filter results returned. Only connections with a name that starts with the prefix are returned."
                      }
                    ]
                  },
                  "ConnectionState": {
                    "allOf": [
                      {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "UPDATING",
                          "DELETING",
                          "AUTHORIZED",
                          "DEAUTHORIZED",
                          "AUTHORIZING",
                          "DEAUTHORIZING"
                        ]
                      },
                      { "description": "The state of the connection." }
                    ]
                  },
                  "NextToken": {
                    "allOf": [
                      { "type": "string", "minLength": 1, "maxLength": 2048 },
                      {
                        "description": "The token returned by a previous call to retrieve the next set of results."
                      }
                    ]
                  },
                  "Limit": {
                    "allOf": [
                      { "type": "integer", "minimum": 1, "maximum": 100 },
                      {
                        "description": "The maximum number of connections to return."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.ListConnections"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "List Connections"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.UpdateApiDestination": {
      "post": {
        "operationId": "UpdateApiDestination",
        "description": "Updates an API destination.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ApiDestinationArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:api-destination\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        {
                          "description": "The ARN of the API destination that was updated."
                        }
                      ]
                    },
                    "ApiDestinationState": {
                      "allOf": [
                        { "type": "string", "enum": ["ACTIVE", "INACTIVE"] },
                        {
                          "description": "The state of the API destination that was updated."
                        }
                      ]
                    },
                    "CreationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the API destination was created."
                        }
                      ]
                    },
                    "LastModifiedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the API destination was last modified."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "UpdateApiDestinationRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      {
                        "description": "The name of the API destination to update."
                      }
                    ]
                  },
                  "Description": {
                    "allOf": [
                      { "type": "string", "pattern": ".*", "maxLength": 512 },
                      {
                        "description": "The name of the API destination to update."
                      }
                    ]
                  },
                  "ConnectionArn": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                        "minLength": 1,
                        "maxLength": 1600
                      },
                      {
                        "description": "The ARN of the connection to use for the API destination."
                      }
                    ]
                  },
                  "InvocationEndpoint": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$",
                        "minLength": 1,
                        "maxLength": 2048
                      },
                      {
                        "description": "The URL to the endpoint to use for the API destination."
                      }
                    ]
                  },
                  "HttpMethod": {
                    "allOf": [
                      {
                        "type": "string",
                        "enum": [
                          "POST",
                          "GET",
                          "HEAD",
                          "OPTIONS",
                          "PUT",
                          "PATCH",
                          "DELETE"
                        ]
                      },
                      {
                        "description": "The method to use for the API destination."
                      }
                    ]
                  },
                  "InvocationRateLimitPerSecond": {
                    "allOf": [
                      { "type": "integer", "minimum": 1 },
                      {
                        "description": "The maximum number of invocations per second to send to the API destination."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.UpdateApiDestination"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Update Api Destination"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    },
    "/#X-Amz-Target=AWSEvents.UpdateConnection": {
      "post": {
        "operationId": "UpdateConnection",
        "description": "Updates settings for a connection.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConnectionArn": {
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$",
                          "minLength": 1,
                          "maxLength": 1600
                        },
                        {
                          "description": "The ARN of the connection that was updated."
                        }
                      ]
                    },
                    "ConnectionState": {
                      "allOf": [
                        {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "UPDATING",
                            "DELETING",
                            "AUTHORIZED",
                            "DEAUTHORIZED",
                            "AUTHORIZING",
                            "DEAUTHORIZING"
                          ]
                        },
                        {
                          "description": "The state of the connection that was updated."
                        }
                      ]
                    },
                    "CreationTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was created."
                        }
                      ]
                    },
                    "LastModifiedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was last modified."
                        }
                      ]
                    },
                    "LastAuthorizedTime": {
                      "allOf": [
                        { "type": "string", "format": "date-time" },
                        {
                          "description": "A time stamp for the time that the connection was last authorized."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "content": { "application/json": { "schema": {} } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "application/json": { "schema": {} } }
          },
          "482": {
            "description": "InternalException",
            "content": { "application/json": { "schema": {} } }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "title": "UpdateConnectionRequest",
                "properties": {
                  "Name": {
                    "allOf": [
                      {
                        "type": "string",
                        "pattern": "[\\.\\-_A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 64
                      },
                      { "description": "The name of the connection to update." }
                    ]
                  },
                  "Description": {
                    "allOf": [
                      { "type": "string", "pattern": ".*", "maxLength": 512 },
                      { "description": "A description for the connection." }
                    ]
                  },
                  "AuthorizationType": {
                    "allOf": [
                      {
                        "type": "string",
                        "enum": ["BASIC", "OAUTH_CLIENT_CREDENTIALS", "API_KEY"]
                      },
                      {
                        "description": "The type of authorization to use for the connection."
                      }
                    ]
                  },
                  "AuthParameters": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "BasicAuthParameters": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "Username": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                        "minLength": 1,
                                        "maxLength": 512
                                      },
                                      {
                                        "description": "The user name to use for Basic authorization."
                                      }
                                    ]
                                  },
                                  "Password": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                        "minLength": 1,
                                        "maxLength": 512
                                      },
                                      {
                                        "description": "The password associated with the user name to use for Basic authorization."
                                      }
                                    ]
                                  }
                                },
                                "description": "Contains the Basic authorization parameters for the connection."
                              },
                              {
                                "description": "A <code>UpdateConnectionBasicAuthRequestParameters</code> object that contains the authorization parameters for Basic authorization."
                              }
                            ]
                          },
                          "OAuthParameters": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "ClientParameters": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "ClientID": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                                "minLength": 1,
                                                "maxLength": 512
                                              },
                                              {
                                                "description": "The client ID to use for OAuth authorization."
                                              }
                                            ]
                                          },
                                          "ClientSecret": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                                "minLength": 1,
                                                "maxLength": 512
                                              },
                                              {
                                                "description": "The client secret assciated with the client ID to use for OAuth authorization."
                                              }
                                            ]
                                          }
                                        },
                                        "description": "Contains the OAuth authorization parameters to use for the connection."
                                      },
                                      {
                                        "description": "A <code>UpdateConnectionOAuthClientRequestParameters</code> object that contains the client parameters to use for the connection when OAuth is specified as the authorization type."
                                      }
                                    ]
                                  },
                                  "AuthorizationEndpoint": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$",
                                        "minLength": 1,
                                        "maxLength": 2048
                                      },
                                      {
                                        "description": "The URL to the authorization endpoint when OAuth is specified as the authorization type."
                                      }
                                    ]
                                  },
                                  "HttpMethod": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "enum": ["GET", "POST", "PUT"]
                                      },
                                      {
                                        "description": "The method used to connect to the HTTP endpoint."
                                      }
                                    ]
                                  },
                                  "OAuthHttpParameters": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "HeaderParameters": {
                                            "allOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "Key": {
                                                      "allOf": [
                                                        {
                                                          "type": "string",
                                                          "pattern": "^[!#$%&'*+-.^_`|~0-9a-zA-Z]+$",
                                                          "maxLength": 512
                                                        },
                                                        {
                                                          "description": "The key for the parameter."
                                                        }
                                                      ]
                                                    },
                                                    "Value": {
                                                      "allOf": [
                                                        {
                                                          "type": "string",
                                                          "pattern": "^[ \\t]*[\\x20-\\x7E]+([ \\t]+[\\x20-\\x7E]+)*[ \\t]*$",
                                                          "maxLength": 512
                                                        },
                                                        {
                                                          "description": "The value associated with the key."
                                                        }
                                                      ]
                                                    },
                                                    "IsValueSecret": {
                                                      "allOf": [
                                                        { "type": "boolean" },
                                                        {
                                                          "description": "Specified whether the value is a secret."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "description": "Additional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB."
                                                },
                                                "minItems": 0,
                                                "maxItems": 100
                                              },
                                              {
                                                "description": "Contains additional header parameters for the connection."
                                              }
                                            ]
                                          },
                                          "QueryStringParameters": {
                                            "allOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "Key": {
                                                      "allOf": [
                                                        {
                                                          "type": "string",
                                                          "pattern": "[^\\x00-\\x1F\\x7F]+",
                                                          "maxLength": 512
                                                        },
                                                        {
                                                          "description": "The key for a query string parameter."
                                                        }
                                                      ]
                                                    },
                                                    "Value": {
                                                      "allOf": [
                                                        {
                                                          "type": "string",
                                                          "pattern": "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F]+",
                                                          "maxLength": 512
                                                        },
                                                        {
                                                          "description": "The value associated with the key for the query string parameter."
                                                        }
                                                      ]
                                                    },
                                                    "IsValueSecret": {
                                                      "allOf": [
                                                        { "type": "boolean" },
                                                        {
                                                          "description": "Specifies whether the value is secret."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "description": "Additional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB."
                                                },
                                                "minItems": 0,
                                                "maxItems": 100
                                              },
                                              {
                                                "description": "Contains additional query string parameters for the connection."
                                              }
                                            ]
                                          },
                                          "BodyParameters": {
                                            "allOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "Key": {
                                                      "allOf": [
                                                        { "type": "string" },
                                                        {
                                                          "description": "The key for the parameter."
                                                        }
                                                      ]
                                                    },
                                                    "Value": {
                                                      "allOf": [
                                                        { "type": "string" },
                                                        {
                                                          "description": "The value associated with the key."
                                                        }
                                                      ]
                                                    },
                                                    "IsValueSecret": {
                                                      "allOf": [
                                                        { "type": "boolean" },
                                                        {
                                                          "description": "Specified whether the value is secret."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "description": "Additional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB."
                                                },
                                                "minItems": 0,
                                                "maxItems": 100
                                              },
                                              {
                                                "description": "Contains additional body string parameters for the connection."
                                              }
                                            ]
                                          }
                                        },
                                        "description": "Contains additional parameters for the connection."
                                      },
                                      {
                                        "description": "The additional HTTP parameters used for the OAuth authorization request."
                                      }
                                    ]
                                  }
                                },
                                "description": "Contains the OAuth request parameters to use for the connection."
                              },
                              {
                                "description": "A <code>UpdateConnectionOAuthRequestParameters</code> object that contains the authorization parameters for OAuth authorization."
                              }
                            ]
                          },
                          "ApiKeyAuthParameters": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "ApiKeyName": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                        "minLength": 1,
                                        "maxLength": 512
                                      },
                                      {
                                        "description": "The name of the API key to use for authorization."
                                      }
                                    ]
                                  },
                                  "ApiKeyValue": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
                                        "minLength": 1,
                                        "maxLength": 512
                                      },
                                      {
                                        "description": "The value associated with teh API key to use for authorization."
                                      }
                                    ]
                                  }
                                },
                                "description": "Contains the API key authorization parameters to use to update the connection."
                              },
                              {
                                "description": "A <code>UpdateConnectionApiKeyAuthRequestParameters</code> object that contains the authorization parameters for API key authorization."
                              }
                            ]
                          },
                          "InvocationHttpParameters": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "HeaderParameters": {
                                    "allOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Key": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "pattern": "^[!#$%&'*+-.^_`|~0-9a-zA-Z]+$",
                                                  "maxLength": 512
                                                },
                                                {
                                                  "description": "The key for the parameter."
                                                }
                                              ]
                                            },
                                            "Value": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "pattern": "^[ \\t]*[\\x20-\\x7E]+([ \\t]+[\\x20-\\x7E]+)*[ \\t]*$",
                                                  "maxLength": 512
                                                },
                                                {
                                                  "description": "The value associated with the key."
                                                }
                                              ]
                                            },
                                            "IsValueSecret": {
                                              "allOf": [
                                                { "type": "boolean" },
                                                {
                                                  "description": "Specified whether the value is a secret."
                                                }
                                              ]
                                            }
                                          },
                                          "description": "Additional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB."
                                        },
                                        "minItems": 0,
                                        "maxItems": 100
                                      },
                                      {
                                        "description": "Contains additional header parameters for the connection."
                                      }
                                    ]
                                  },
                                  "QueryStringParameters": {
                                    "allOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Key": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "pattern": "[^\\x00-\\x1F\\x7F]+",
                                                  "maxLength": 512
                                                },
                                                {
                                                  "description": "The key for a query string parameter."
                                                }
                                              ]
                                            },
                                            "Value": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "pattern": "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F]+",
                                                  "maxLength": 512
                                                },
                                                {
                                                  "description": "The value associated with the key for the query string parameter."
                                                }
                                              ]
                                            },
                                            "IsValueSecret": {
                                              "allOf": [
                                                { "type": "boolean" },
                                                {
                                                  "description": "Specifies whether the value is secret."
                                                }
                                              ]
                                            }
                                          },
                                          "description": "Additional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB."
                                        },
                                        "minItems": 0,
                                        "maxItems": 100
                                      },
                                      {
                                        "description": "Contains additional query string parameters for the connection."
                                      }
                                    ]
                                  },
                                  "BodyParameters": {
                                    "allOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Key": {
                                              "allOf": [
                                                { "type": "string" },
                                                {
                                                  "description": "The key for the parameter."
                                                }
                                              ]
                                            },
                                            "Value": {
                                              "allOf": [
                                                { "type": "string" },
                                                {
                                                  "description": "The value associated with the key."
                                                }
                                              ]
                                            },
                                            "IsValueSecret": {
                                              "allOf": [
                                                { "type": "boolean" },
                                                {
                                                  "description": "Specified whether the value is secret."
                                                }
                                              ]
                                            }
                                          },
                                          "description": "Additional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB."
                                        },
                                        "minItems": 0,
                                        "maxItems": 100
                                      },
                                      {
                                        "description": "Contains additional body string parameters for the connection."
                                      }
                                    ]
                                  }
                                },
                                "description": "Contains additional parameters for the connection."
                              },
                              {
                                "description": "A <code>ConnectionHttpParameters</code> object that contains the additional parameters to use for the connection."
                              }
                            ]
                          }
                        },
                        "description": "Contains the additional parameters to use for the connection."
                      },
                      {
                        "description": "The authorization parameters to use for the connection."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-Amz-Target",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSEvents.UpdateConnection"]
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Date",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Credential",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Security-Token",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-Signature",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "header",
            "schema": { "type": "string" },
            "required": false,
            "x-ignore": true
          }
        ],
        "summary": "Update Connection"
      },
      "parameters": [
        {
          "name": "X-Amz-Content-Sha256",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Date",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Algorithm",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Credential",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Security-Token",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-Signature",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        },
        {
          "name": "X-Amz-SignedHeaders",
          "in": "header",
          "schema": { "type": "string" },
          "required": false,
          "x-ignore": true
        }
      ]
    }
  },
  "components": {
    "parameters": {},
    "securitySchemes": {
      "hmac": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Amazon Signature authorization v4",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {}
  },
  "security": [{ "hmac": [] }],
  "x-metadata": {
    "apiVersion": "2015-10-07",
    "endpointPrefix": "events",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceFullName": "Amazon CloudWatch Events",
    "serviceId": "CloudWatch Events",
    "signatureVersion": "v4",
    "targetPrefix": "AWSEvents",
    "uid": "events-2015-10-07"
  }
}
